[{"C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\index.js":"1","C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\App.js":"2","C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\reportWebVitals.js":"3","C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\components\\Typeahead\\Typeahead.js":"5","C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\components\\Typeahead\\TypeaheadResults\\TypeaheadResults.js":"6"},{"size":565,"mtime":1613520332023,"results":"7","hashOfConfig":"8"},{"size":421,"mtime":1613522203737,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1613520332024,"results":"10","hashOfConfig":"8"},{"size":571,"mtime":1613520332021,"results":"11","hashOfConfig":"8"},{"size":3118,"mtime":1613522203737,"results":"12","hashOfConfig":"8"},{"size":279,"mtime":1613522203738,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y22svl",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\index.js",[],"C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\App.js",[],"C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\reportWebVitals.js",[],"C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\components\\Navbar\\Navbar.js",[],["28","29"],"C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\components\\Typeahead\\Typeahead.js",["30"],"import React, {useState} from 'react';\r\nimport {AsyncTypeahead} from 'react-bootstrap-typeahead';\r\n\r\nimport TypeaheadResults from './TypeaheadResults/TypeaheadResults';\r\nimport './Typeahead.css';\r\n\r\nconst apiKey = '6e92bc67004a571503673da0fd8facc1';\r\nconst searchUrl = 'https://api.themoviedb.org/3/';\r\n\r\nconst Typeahead = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n\r\n    let cache = {};\r\n\r\n    const makeAndHandleRequest = async (query, page = 1) => {\r\n        return await fetch(`${searchUrl}search/multi?language=en-US&query=${query}&api_key=${apiKey}&page=${page}&region=USA&include_adult=false`)\r\n        .then(resp => resp.json())\r\n        .then(({page, results, total_results, total_pages}) => {\r\n            const options = results.map(i => ({\r\n                id: i.id,\r\n                posterPath: i.poster_path,\r\n                mediaType: i.media_type,\r\n                name: i.name\r\n            }));\r\n            return {options, page, total_results, total_pages};\r\n        })\r\n    }\r\n\r\n    const handleInputChange = (query) => {\r\n        setQuery(query);\r\n        if (query.length > 1){\r\n            handleSearch(query);\r\n        }\r\n    }\r\n\r\n    const handlePagination = (e, shownResults) => {\r\n        const cachedQuery = cache[query];\r\n\r\n        if (\r\n            cachedQuery.options.length > shownResults ||\r\n            cachedQuery.options.length === cachedQuery.total_count\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const page = cachedQuery.page + 1;\r\n\r\n        makeAndHandleRequest(query, page).then(resp => {\r\n            const options = cachedQuery.options.concat(resp.options);\r\n            cache[query] = { ...cachedQuery, options, page};\r\n            setLoading(false);\r\n            setOptions(options);\r\n        })\r\n\r\n    };\r\n\r\n    const handleSearch = (query) => {\r\n        console.log('search');\r\n        if (cache[query]) {\r\n            setOptions(cache[query].options);\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        makeAndHandleRequest(query).then(resp => {\r\n            cache[query] = { ...resp, page: 1};\r\n            setLoading(false);\r\n            setOptions(resp.options);\r\n        });\r\n    };\r\n\r\n     \r\n\r\n    return(\r\n        <div className='async-typeahead-wrapper'>\r\n            <AsyncTypeahead \r\n                id='async-typeahead'\r\n                labelKey='name'\r\n                maxResults={20}\r\n                onInputChange={handleInputChange}\r\n                onPaginate={handlePagination}\r\n                onSearch={handleSearch}\r\n                options={options}\r\n                paginate\r\n                placeholder='Search movies, TV shows, and celebrities'\r\n                searchText=\"Searching..\"\r\n                renderMenuItemChildren={(option) => (\r\n                    <TypeaheadResults id={option.id} name={option.name}></TypeaheadResults>\r\n                )}\r\n                query={query}>\r\n            </AsyncTypeahead>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Typeahead;","C:\\Users\\jayce\\Documents\\movie_db\\movie_db\\src\\components\\Typeahead\\TypeaheadResults\\TypeaheadResults.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":11,"column":12,"nodeType":"37","messageId":"38","endLine":11,"endColumn":19},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]