{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jayce\\\\Documents\\\\movie_db\\\\movie_db\\\\src\\\\components\\\\Typeahead\\\\Typeahead.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport TypeaheadResults from './TypeaheadResults/TypeaheadResults';\nimport './Typeahead.css';\nconst apiKey = '6e92bc67004a571503673da0fd8facc1';\nconst searchUrl = 'https://api.themoviedb.org/3/';\n\nconst Typeahead = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [options, setOptions] = useState([]);\n  let cache = {};\n\n  const makeAndHandleRequest = async (query, page = 1) => {\n    return await fetch(`${searchUrl}search/multi?language=en-US&query=${query}&api_key=${apiKey}&page=${page}&region=USA&include_adult=false`).then(resp => resp.json()).then(({\n      page,\n      results,\n      total_results,\n      total_pages\n    }) => {\n      const options = results.map(i => ({\n        id: i.id,\n        posterPath: i.poster_path,\n        mediaType: i.media_type,\n        name: i.name\n      }));\n      return {\n        options,\n        page,\n        total_results,\n        total_pages\n      };\n    });\n  };\n\n  const handleInputChange = query => {\n    setQuery(query);\n    setLoading(true);\n    makeAndHandleRequest(query).then(resp => {\n      // cache[query] = { ...resp, page: 1};\n      setLoading(false);\n      setOptions(resp.options);\n    });\n  };\n\n  const handlePagination = (e, shownResults) => {\n    // const cachedQuery = cache[query];\n    // if (\n    //     cachedQuery.options.length > shownResults ||\n    //     cachedQuery.options.length === cachedQuery.total_count\n    // ) {\n    //     return;\n    // }\n    setLoading(true); // const page = cachedQuery.page + 1;\n\n    makeAndHandleRequest(query).then(resp => {\n      // const options = cachedQuery.options.concat(resp.options);\n      // cache[query] = { ...cachedQuery, options, page};\n      setLoading(false);\n      setOptions(resp.options);\n    });\n  };\n\n  const handleSearch = query => {// console.log('search');\n    // if (cache[query]) {\n    //     setOptions(cache[query].options);\n    //     return;\n    // }\n    // setLoading(true);\n    // makeAndHandleRequest(query).then(resp => {\n    //     // cache[query] = { ...resp, page: 1};\n    //     setLoading(false);\n    //     setOptions(resp.options);\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"async-typeahead-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(AsyncTypeahead, {\n      isLoading: loading,\n      id: \"async-typeahead\",\n      labelKey: \"id\",\n      maxResults: 20,\n      onInputChange: handleInputChange,\n      onPaginate: handlePagination,\n      onSearch: handleSearch,\n      options: options,\n      paginate: true,\n      placeholder: \"Search movies, TV shows, and celebrities\",\n      searchText: \"Searching..\",\n      renderMenuItemChildren: option => /*#__PURE__*/_jsxDEV(TypeaheadResults, {\n        id: option.id,\n        name: option.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this),\n      query: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Typeahead, \"fDLBNlxpnh1vIKh8srSnjBy2Zx0=\");\n\n_c = Typeahead;\nexport default Typeahead;\n\nvar _c;\n\n$RefreshReg$(_c, \"Typeahead\");","map":{"version":3,"sources":["C:/Users/jayce/Documents/movie_db/movie_db/src/components/Typeahead/Typeahead.js"],"names":["React","useState","AsyncTypeahead","TypeaheadResults","apiKey","searchUrl","Typeahead","loading","setLoading","query","setQuery","options","setOptions","cache","makeAndHandleRequest","page","fetch","then","resp","json","results","total_results","total_pages","map","i","id","posterPath","poster_path","mediaType","media_type","name","handleInputChange","handlePagination","e","shownResults","handleSearch","option"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {AsyncTypeahead} from 'react-bootstrap-typeahead';\r\n\r\nimport TypeaheadResults from './TypeaheadResults/TypeaheadResults';\r\nimport './Typeahead.css';\r\n\r\nconst apiKey = '6e92bc67004a571503673da0fd8facc1';\r\nconst searchUrl = 'https://api.themoviedb.org/3/';\r\n\r\nconst Typeahead = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n\r\n    let cache = {};\r\n\r\n    const makeAndHandleRequest = async (query, page = 1) => {\r\n        return await fetch(`${searchUrl}search/multi?language=en-US&query=${query}&api_key=${apiKey}&page=${page}&region=USA&include_adult=false`)\r\n        .then(resp => resp.json())\r\n        .then(({page, results, total_results, total_pages}) => {\r\n            const options = results.map(i => ({\r\n                id: i.id,\r\n                posterPath: i.poster_path,\r\n                mediaType: i.media_type,\r\n                name: i.name\r\n            }));\r\n            return {options, page, total_results, total_pages};\r\n        })\r\n    }\r\n\r\n    const handleInputChange = (query) => {\r\n        setQuery(query);\r\n        setLoading(true);\r\n        makeAndHandleRequest(query).then(resp => {\r\n            // cache[query] = { ...resp, page: 1};\r\n            setLoading(false);\r\n            setOptions(resp.options);\r\n        });\r\n    }\r\n\r\n    const handlePagination = (e, shownResults) => {\r\n        // const cachedQuery = cache[query];\r\n\r\n        // if (\r\n        //     cachedQuery.options.length > shownResults ||\r\n        //     cachedQuery.options.length === cachedQuery.total_count\r\n        // ) {\r\n        //     return;\r\n        // }\r\n\r\n        setLoading(true);\r\n\r\n        // const page = cachedQuery.page + 1;\r\n\r\n        makeAndHandleRequest(query).then(resp => {\r\n            // const options = cachedQuery.options.concat(resp.options);\r\n            // cache[query] = { ...cachedQuery, options, page};\r\n            setLoading(false);\r\n            setOptions(resp.options);\r\n        })\r\n\r\n    };\r\n\r\n    const handleSearch = (query) => {\r\n        // console.log('search');\r\n        // if (cache[query]) {\r\n        //     setOptions(cache[query].options);\r\n        //     return;\r\n        // }\r\n\r\n        // setLoading(true);\r\n        // makeAndHandleRequest(query).then(resp => {\r\n        //     // cache[query] = { ...resp, page: 1};\r\n        //     setLoading(false);\r\n        //     setOptions(resp.options);\r\n        // });\r\n    };\r\n\r\n     \r\n\r\n    return(\r\n        <div className='async-typeahead-wrapper'>\r\n            <AsyncTypeahead \r\n                isLoading={loading} \r\n                id='async-typeahead'\r\n                labelKey='id'\r\n                maxResults={20}\r\n                onInputChange={handleInputChange}\r\n                onPaginate={handlePagination}\r\n                onSearch={handleSearch}\r\n                options={options}\r\n                paginate\r\n                placeholder='Search movies, TV shows, and celebrities'\r\n                searchText=\"Searching..\"\r\n                renderMenuItemChildren={(option) => (\r\n                    <TypeaheadResults id={option.id} name={option.name}></TypeaheadResults>\r\n                )}\r\n                query={query}>\r\n            </AsyncTypeahead>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Typeahead;"]},"metadata":{},"sourceType":"module"}