{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jayce\\\\Documents\\\\movie_db\\\\movie_db\\\\src\\\\components\\\\Typeahead\\\\Typeahead.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport TypeaheadResults from './TypeaheadResults/TypeaheadResults';\nimport './Typeahead.css';\nconst apiKey = '6e92bc67004a571503673da0fd8facc1';\nconst searchUrl = 'https://api.themoviedb.org/3/';\n\nconst Typeahead = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [options, setOptions] = useState([]);\n  let cache = {};\n\n  const makeAndHandleRequest = async (query, page = 1) => {\n    return await fetch(`${searchUrl}search/multi?api_key=${apiKey}&language=en-US&page=${page}&include_adult=false`).then(resp => resp.json()).then(({\n      page,\n      res,\n      total_results,\n      total_pages\n    }) => {\n      const results = res.map(i => ({\n        id: i.id,\n        posterPath: i.poster_path,\n        mediaType: i.media_type,\n        name: i.name\n      }));\n      return {\n        results,\n        page,\n        total_results,\n        total_pages\n      };\n    });\n  };\n\n  const handleInputChange = query => {\n    setQuery(query);\n  };\n\n  const handlePagination = (e, shownResults) => {\n    const currentState = {\n      loading: loading,\n      query: query,\n      options,\n      options\n    };\n    const cachedQuery = cache;\n\n    if (cachedQuery.options.length > shownResults || cachedQuery.options.length === cachedQuery.total_count) {\n      return;\n    }\n\n    setLoading(true);\n    const page = cachedQuery.page + 1;\n    makeAndHandleRequest(query, page).then(resp => {\n      const options = cachedQuery.options.concat(resp.options);\n      this._cache[query] = { ...cachedQuery,\n        options,\n        page\n      };\n      setLoading(false);\n      setOptions(options);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"async-typeahead-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(AsyncTypeahead, {\n      isLoading: loading,\n      delay: 250,\n      id: \"async-typeahead\",\n      labelKey: \"search\",\n      maxResults: 20,\n      minLength: 2,\n      onInputChange: handleInputChange,\n      onPaginate: handlePagination,\n      onSearch: () => {},\n      paginate: true,\n      placeholder: \"Search movies, TV shows, and celebrities\",\n      renderMenuItemChildren: option => /*#__PURE__*/_jsxDEV(TypeaheadResults, {\n        props: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Typeahead, \"fDLBNlxpnh1vIKh8srSnjBy2Zx0=\");\n\n_c = Typeahead;\nexport default Typeahead;\n\nvar _c;\n\n$RefreshReg$(_c, \"Typeahead\");","map":{"version":3,"sources":["C:/Users/jayce/Documents/movie_db/movie_db/src/components/Typeahead/Typeahead.js"],"names":["React","useState","AsyncTypeahead","TypeaheadResults","apiKey","searchUrl","Typeahead","loading","setLoading","query","setQuery","options","setOptions","cache","makeAndHandleRequest","page","fetch","then","resp","json","res","total_results","total_pages","results","map","i","id","posterPath","poster_path","mediaType","media_type","name","handleInputChange","handlePagination","e","shownResults","currentState","cachedQuery","length","total_count","concat","_cache","option"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {AsyncTypeahead} from 'react-bootstrap-typeahead';\r\n\r\nimport TypeaheadResults from './TypeaheadResults/TypeaheadResults';\r\nimport './Typeahead.css';\r\n\r\nconst apiKey = '6e92bc67004a571503673da0fd8facc1';\r\nconst searchUrl = 'https://api.themoviedb.org/3/';\r\n\r\nconst Typeahead = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n\r\n    let cache = {};\r\n\r\n    const makeAndHandleRequest = async (query, page = 1) => {\r\n        return await fetch(`${searchUrl}search/multi?api_key=${apiKey}&language=en-US&page=${page}&include_adult=false`)\r\n        .then(resp => resp.json())\r\n        .then(({page, res, total_results, total_pages}) => {\r\n            const results = res.map(i => ({\r\n                id: i.id,\r\n                posterPath: i.poster_path,\r\n                mediaType: i.media_type,\r\n                name: i.name\r\n            }));\r\n            return {results, page, total_results, total_pages};\r\n        })\r\n    }\r\n\r\n    const handleInputChange = query => {\r\n        setQuery(query);\r\n    }\r\n\r\n    const handlePagination = (e, shownResults) => {\r\n        const currentState = {\r\n            loading: loading,\r\n            query: query,\r\n            options, options,\r\n        };\r\n        const cachedQuery = cache;\r\n\r\n        if (\r\n            cachedQuery.options.length > shownResults ||\r\n            cachedQuery.options.length === cachedQuery.total_count\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const page = cachedQuery.page + 1;\r\n\r\n        makeAndHandleRequest(query, page).then(resp => {\r\n            const options = cachedQuery.options.concat(resp.options);\r\n            this._cache[query] = { ...cachedQuery, options, page};\r\n            setLoading(false);\r\n            setOptions(options);\r\n        })\r\n\r\n    }\r\n\r\n     \r\n\r\n    return(\r\n        <div className='async-typeahead-wrapper'>\r\n            <AsyncTypeahead \r\n                isLoading={loading} \r\n                delay={250}\r\n                id='async-typeahead'\r\n                labelKey='search'\r\n                maxResults={20}\r\n                minLength={2}\r\n                onInputChange={handleInputChange}\r\n                onPaginate={handlePagination}\r\n                onSearch={() => {}}\r\n                paginate\r\n                placeholder=\"Search movies, TV shows, and celebrities\"\r\n                renderMenuItemChildren={option => (\r\n                    <TypeaheadResults props={option}></TypeaheadResults>\r\n                )}>\r\n            </AsyncTypeahead>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Typeahead;"]},"metadata":{},"sourceType":"module"}