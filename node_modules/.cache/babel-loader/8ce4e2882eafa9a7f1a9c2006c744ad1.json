{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _defineProperty from\"C:/Users/jayce/Documents/movie_db/movie_db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:/Users/jayce/Documents/movie_db/movie_db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{AsyncTypeahead}from'react-bootstrap-typeahead';import TypeaheadResults from'./TypeaheadResults/TypeaheadResults';import'./Typeahead.css';var Typeahead=function Typeahead(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),query=_useState4[0],setQuery=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),options=_useState6[0],setOptions=_useState6[1];var cache={};var handleInputChange=function handleInputChange(query){setQuery(query);};var handlePagination=function handlePagination(e,shownResults){var currentState=_defineProperty({loading:loading,query:query,options:options},\"options\",options);var cachedQuery=cache;if(cachedQuery.options.length>shownResults||cachedQuery.options.length===cachedQuery.total_count){return;}setLoading(true);var page=cachedQuery.page+1;};// const makeAndHandleRequest(query, page = 1) {\n//     return fetch(`${SEARCH_URI}?q=${query}`)\n// }\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"async-typeahead-wrapper\",children:/*#__PURE__*/_jsx(AsyncTypeahead,{isLoading:loading,delay:250,id:\"async-typeahead\",labelKey:\"search\",maxResults:20,minLength:2,onInputChange:handleInputChange,onPaginate:function onPaginate(){},onSearch:function onSearch(){},paginate:true,placeholder:\"Search movies, TV shows, and celebrities\",renderMenuItemChildren:function renderMenuItemChildren(option){return/*#__PURE__*/_jsx(TypeaheadResults,{props:option});}})});};export default Typeahead;","map":{"version":3,"sources":["C:/Users/jayce/Documents/movie_db/movie_db/src/components/Typeahead/Typeahead.js"],"names":["React","useState","AsyncTypeahead","TypeaheadResults","Typeahead","loading","setLoading","query","setQuery","options","setOptions","cache","handleInputChange","handlePagination","e","shownResults","currentState","cachedQuery","length","total_count","page","option"],"mappings":"+WAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,cAAR,KAA6B,2BAA7B,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,qCAA7B,CACA,MAAO,iBAAP,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,eACUH,QAAQ,CAAC,KAAD,CADlB,wCACbI,OADa,eACJC,UADI,8BAEML,QAAQ,CAAC,EAAD,CAFd,yCAEbM,KAFa,eAENC,QAFM,8BAGUP,QAAQ,CAAC,EAAD,CAHlB,yCAGbQ,OAHa,eAGJC,UAHI,eAKpB,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAL,KAAK,CAAI,CAC/BC,QAAQ,CAACD,KAAD,CAAR,CACH,CAFD,CAIA,GAAMM,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,CAAD,CAAIC,YAAJ,CAAqB,CAC1C,GAAMC,CAAAA,YAAY,kBACdX,OAAO,CAAEA,OADK,CAEdE,KAAK,CAAEA,KAFO,CAGdE,OAAO,CAAPA,OAHc,YAGLA,OAHK,CAAlB,CAKA,GAAMQ,CAAAA,WAAW,CAAGN,KAApB,CAEA,GACIM,WAAW,CAACR,OAAZ,CAAoBS,MAApB,CAA6BH,YAA7B,EACAE,WAAW,CAACR,OAAZ,CAAoBS,MAApB,GAA+BD,WAAW,CAACE,WAF/C,CAGE,CACE,OACH,CAEDb,UAAU,CAAC,IAAD,CAAV,CAEA,GAAMc,CAAAA,IAAI,CAAGH,WAAW,CAACG,IAAZ,CAAmB,CAAhC,CAGH,CApBD,CAsBA;AACA;AACA;AAEA,mBACI,YAAK,SAAS,CAAC,yBAAf,uBACI,KAAC,cAAD,EACI,SAAS,CAAEf,OADf,CAEI,KAAK,CAAE,GAFX,CAGI,EAAE,CAAC,iBAHP,CAII,QAAQ,CAAC,QAJb,CAKI,UAAU,CAAE,EALhB,CAMI,SAAS,CAAE,CANf,CAOI,aAAa,CAAEO,iBAPnB,CAQI,UAAU,CAAE,qBAAM,CAAE,CARxB,CASI,QAAQ,CAAE,mBAAM,CAAE,CATtB,CAUI,QAAQ,KAVZ,CAWI,WAAW,CAAC,0CAXhB,CAYI,sBAAsB,CAAE,gCAAAS,MAAM,qBAC1B,KAAC,gBAAD,EAAkB,KAAK,CAAEA,MAAzB,EAD0B,EAZlC,EADJ,EADJ,CAoBH,CAzDD,CA2DA,cAAejB,CAAAA,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {AsyncTypeahead} from 'react-bootstrap-typeahead';\r\n\r\nimport TypeaheadResults from './TypeaheadResults/TypeaheadResults';\r\nimport './Typeahead.css';\r\n\r\nconst Typeahead = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n\r\n    let cache = {};\r\n\r\n    const handleInputChange = query => {\r\n        setQuery(query);\r\n    }\r\n\r\n    const handlePagination = (e, shownResults) => {\r\n        const currentState = {\r\n            loading: loading,\r\n            query: query,\r\n            options, options,\r\n        };\r\n        const cachedQuery = cache;\r\n\r\n        if (\r\n            cachedQuery.options.length > shownResults ||\r\n            cachedQuery.options.length === cachedQuery.total_count\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const page = cachedQuery.page + 1;\r\n\r\n\r\n    }\r\n\r\n    // const makeAndHandleRequest(query, page = 1) {\r\n    //     return fetch(`${SEARCH_URI}?q=${query}`)\r\n    // }\r\n\r\n    return(\r\n        <div className='async-typeahead-wrapper'>\r\n            <AsyncTypeahead \r\n                isLoading={loading} \r\n                delay={250}\r\n                id='async-typeahead'\r\n                labelKey='search'\r\n                maxResults={20}\r\n                minLength={2}\r\n                onInputChange={handleInputChange}\r\n                onPaginate={() => {}}\r\n                onSearch={() => {}}\r\n                paginate\r\n                placeholder=\"Search movies, TV shows, and celebrities\"\r\n                renderMenuItemChildren={option => (\r\n                    <TypeaheadResults props={option}></TypeaheadResults>\r\n                )}>\r\n            </AsyncTypeahead>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Typeahead;"]},"metadata":{},"sourceType":"module"}