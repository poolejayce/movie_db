{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport isEqual from 'fast-deep-equal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TypeaheadManager from './TypeaheadManager';\nimport { caseSensitiveType, checkPropType, defaultInputValueType, defaultSelectedType, deprecated, highlightOnlyResultType, ignoreDiacriticsType, isRequiredForA11y, labelKeyType, optionType, selectedType } from '../propTypes';\nimport { addCustomOption, defaultFilterBy, getOptionLabel, getStringLabelKey, getUpdatedActiveIndex, getTruncatedOptions, head, isShown, isString, noop, uniqueId, validateSelectedPropChange } from '../utils';\nimport { DEFAULT_LABELKEY, DOWN, ESC, RETURN, TAB, UP } from '../constants';\nvar propTypes = {\n  /**\n   * Allows the creation of new selections on the fly. Note that any new items\n   * will be added to the list of selections, but not the list of original\n   * options unless handled as such by `Typeahead`'s parent.\n   *\n   * If a function is specified, it will be used to determine whether a custom\n   * option should be included. The return value should be true or false.\n   */\n  allowNew: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n  /**\n   * Autofocus the input when the component initially mounts.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Whether or not filtering should be case-sensitive.\n   */\n  caseSensitive: checkPropType(PropTypes.bool, caseSensitiveType),\n\n  /**\n   * The initial value displayed in the text input.\n   */\n  defaultInputValue: checkPropType(PropTypes.string, defaultInputValueType),\n\n  /**\n   * Whether or not the menu is displayed upon initial render.\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * Specify any pre-selected options. Use only if you want the component to\n   * be uncontrolled.\n   */\n  defaultSelected: checkPropType(PropTypes.arrayOf(optionType), defaultSelectedType),\n\n  /**\n   * Either an array of fields in `option` to search, or a custom filtering\n   * callback.\n   */\n  filterBy: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string.isRequired), PropTypes.func]),\n\n  /**\n   * Highlights the menu item if there is only one result and allows selecting\n   * that item by hitting enter. Does not work with `allowNew`.\n   */\n  highlightOnlyResult: checkPropType(PropTypes.bool, highlightOnlyResultType),\n\n  /**\n   * An html id attribute, required for assistive technologies such as screen\n   * readers.\n   */\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n\n  /**\n   * Whether the filter should ignore accents and other diacritical marks.\n   */\n  ignoreDiacritics: checkPropType(PropTypes.bool, ignoreDiacriticsType),\n\n  /**\n   * Specify the option key to use for display or a function returning the\n   * display string. By default, the selector will use the `label` key.\n   */\n  labelKey: checkPropType(PropTypes.oneOfType([PropTypes.string, PropTypes.func]), labelKeyType),\n\n  /**\n   * Maximum number of results to display by default. Mostly done for\n   * performance reasons so as not to render too many DOM nodes in the case of\n   * large data sets.\n   */\n  maxResults: PropTypes.number,\n\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n\n  /**\n   * Whether or not multiple selections are allowed.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Invoked when the input is blurred. Receives an event.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Invoked whenever items are added or removed. Receives an array of the\n   * selected options.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Invoked when the input is focused. Receives an event.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Invoked when the input value changes. Receives the string value of the\n   * input.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Invoked when a key is pressed. Receives an event.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Invoked when menu visibility changes.\n   */\n  onMenuToggle: PropTypes.func,\n\n  /**\n   * Invoked when the pagination menu item is clicked. Receives an event.\n   */\n  onPaginate: PropTypes.func,\n\n  /**\n   * Whether or not the menu should be displayed. `undefined` allows the\n   * component to control visibility, while `true` and `false` show and hide\n   * the menu, respectively.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Full set of options, including pre-selected options. Must either be an\n   * array of objects (recommended) or strings.\n   */\n  options: PropTypes.arrayOf(optionType).isRequired,\n\n  /**\n   * Give user the ability to display additional results if the number of\n   * results exceeds `maxResults`.\n   */\n  paginate: PropTypes.bool,\n\n  /**\n   * The selected option(s) displayed in the input. Use this prop if you want\n   * to control the component via its parent.\n   */\n  selected: checkPropType(PropTypes.arrayOf(optionType), selectedType),\n\n  /**\n   * Allows selecting the hinted result by pressing enter.\n   */\n  selectHintOnEnter: deprecated(PropTypes.bool, 'Use the `shouldSelect` prop on the `Hint` component to define which ' + 'keystrokes can select the hint.')\n};\nvar defaultProps = {\n  allowNew: false,\n  autoFocus: false,\n  caseSensitive: false,\n  defaultInputValue: '',\n  defaultOpen: false,\n  defaultSelected: [],\n  filterBy: [],\n  highlightOnlyResult: false,\n  ignoreDiacritics: true,\n  labelKey: DEFAULT_LABELKEY,\n  maxResults: 100,\n  minLength: 0,\n  multiple: false,\n  onBlur: noop,\n  onFocus: noop,\n  onInputChange: noop,\n  onKeyDown: noop,\n  onMenuToggle: noop,\n  onPaginate: noop,\n  paginate: true\n};\nexport function getInitialState(props) {\n  var defaultInputValue = props.defaultInputValue,\n      defaultOpen = props.defaultOpen,\n      defaultSelected = props.defaultSelected,\n      maxResults = props.maxResults,\n      multiple = props.multiple;\n  var selected = props.selected ? props.selected.slice() : defaultSelected.slice();\n  var text = defaultInputValue;\n\n  if (!multiple && selected.length) {\n    // Set the text if an initial selection is passed in.\n    text = getOptionLabel(head(selected), props.labelKey);\n\n    if (selected.length > 1) {\n      // Limit to 1 selection in single-select mode.\n      selected = selected.slice(0, 1);\n    }\n  }\n\n  return {\n    activeIndex: -1,\n    activeItem: null,\n    initialItem: null,\n    isFocused: false,\n    selected: selected,\n    showMenu: defaultOpen,\n    shownResults: maxResults,\n    text: text\n  };\n}\nexport function clearTypeahead(state, props) {\n  return _extends({}, getInitialState(props), {\n    isFocused: state.isFocused,\n    selected: [],\n    text: ''\n  });\n}\nexport function hideMenu(state, props) {\n  var _getInitialState = getInitialState(props),\n      activeIndex = _getInitialState.activeIndex,\n      activeItem = _getInitialState.activeItem,\n      initialItem = _getInitialState.initialItem,\n      shownResults = _getInitialState.shownResults;\n\n  return {\n    activeIndex: activeIndex,\n    activeItem: activeItem,\n    initialItem: initialItem,\n    showMenu: false,\n    shownResults: shownResults\n  };\n}\nexport function toggleMenu(state, props) {\n  return state.showMenu ? hideMenu(state, props) : {\n    showMenu: true\n  };\n}\n\nvar Typeahead = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Typeahead, _React$Component);\n\n  function Typeahead() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", getInitialState(_this.props));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isMenuShown\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"blur\", function () {\n      _this.inputNode && _this.inputNode.blur();\n\n      _this.hideMenu();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      _this.setState(clearTypeahead);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      _this.inputNode && _this.inputNode.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInput\", function () {\n      return _this.inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", function (inputNode) {\n      _this.inputNode = inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setItem\", function (item, position) {\n      _this.items[position] = item;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideMenu\", function () {\n      _this.setState(hideMenu);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleMenu\", function () {\n      _this.setState(toggleMenu);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveIndexChange\", function (activeIndex) {\n      _this.setState(function (state) {\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeIndex === -1 ? null : state.activeItem\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveItemChange\", function (activeItem) {\n      // Don't update the active item if it hasn't changed.\n      if (!isEqual(activeItem, _this.state.activeItem)) {\n        _this.setState({\n          activeItem: activeItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleBlur\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: false\n      }, function () {\n        return _this.props.onBlur(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChange\", function (selected) {\n      _this.props.onChange && _this.props.onChange(selected);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleClear\", function () {\n      _this.setState(clearTypeahead, function () {\n        return _this._handleChange([]);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleFocus\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: true,\n        showMenu: true\n      }, function () {\n        return _this.props.onFocus(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInitialItemChange\", function (initialItem) {\n      // Don't update the initial item if it hasn't changed.\n      if (!isEqual(initialItem, _this.state.initialItem)) {\n        _this.setState({\n          initialItem: initialItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInputChange\", function (e) {\n      e.persist();\n      var text = e.currentTarget.value;\n      var _this$props = _this.props,\n          multiple = _this$props.multiple,\n          onInputChange = _this$props.onInputChange; // Clear selections when the input value changes in single-select mode.\n\n      var shouldClearSelections = _this.state.selected.length && !multiple;\n\n      _this.setState(function (state, props) {\n        var _getInitialState2 = getInitialState(props),\n            activeIndex = _getInitialState2.activeIndex,\n            activeItem = _getInitialState2.activeItem,\n            shownResults = _getInitialState2.shownResults;\n\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeItem,\n          selected: shouldClearSelections ? [] : state.selected,\n          showMenu: true,\n          shownResults: shownResults,\n          text: text\n        };\n      }, function () {\n        onInputChange(text, e);\n        shouldClearSelections && _this._handleChange([]);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var activeItem = _this.state.activeItem; // Skip most actions when the menu is hidden.\n\n      if (!_this.isMenuShown) {\n        if (e.keyCode === UP || e.keyCode === DOWN) {\n          _this.setState({\n            showMenu: true\n          });\n        }\n\n        _this.props.onKeyDown(e);\n\n        return;\n      }\n\n      switch (e.keyCode) {\n        case UP:\n        case DOWN:\n          // Prevent input cursor from going to the beginning when pressing up.\n          e.preventDefault();\n\n          _this._handleActiveIndexChange(getUpdatedActiveIndex(_this.state.activeIndex, e.keyCode, _this.items));\n\n          break;\n\n        case RETURN:\n          // Prevent form submission while menu is open.\n          e.preventDefault();\n          activeItem && _this._handleMenuItemSelect(activeItem, e);\n          break;\n\n        case ESC:\n        case TAB:\n          // ESC simply hides the menu. TAB will blur the input and move focus to\n          // the next item; hide the menu so it doesn't gain focus.\n          _this.hideMenu();\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this.props.onKeyDown(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleMenuItemSelect\", function (option, e) {\n      if (option.paginationOption) {\n        _this._handlePaginate(e);\n      } else {\n        _this._handleSelectionAdd(option);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePaginate\", function (e) {\n      e.persist();\n\n      _this.setState(function (state, props) {\n        return {\n          shownResults: state.shownResults + props.maxResults\n        };\n      }, function () {\n        return _this.props.onPaginate(e, _this.state.shownResults);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionAdd\", function (option) {\n      var _this$props2 = _this.props,\n          multiple = _this$props2.multiple,\n          labelKey = _this$props2.labelKey;\n      var selected;\n      var selection = option;\n      var text; // Add a unique id to the custom selection. Avoid doing this in `render` so\n      // the id doesn't increment every time.\n\n      if (!isString(selection) && selection.customOption) {\n        selection = _extends({}, selection, {\n          id: uniqueId('new-id-')\n        });\n      }\n\n      if (multiple) {\n        // If multiple selections are allowed, add the new selection to the\n        // existing selections.\n        selected = _this.state.selected.concat(selection);\n        text = '';\n      } else {\n        // If only a single selection is allowed, replace the existing selection\n        // with the new one.\n        selected = [selection];\n        text = getOptionLabel(selection, labelKey);\n      }\n\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          initialItem: selection,\n          selected: selected,\n          text: text\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionRemove\", function (selection) {\n      var selected = _this.state.selected.filter(function (option) {\n        return !isEqual(option, selection);\n      }); // Make sure the input stays focused after the item is removed.\n\n\n      _this.focus();\n\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          selected: selected\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    return _this;\n  }\n\n  var _proto = Typeahead.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props.autoFocus && this.focus();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var _this$props3 = this.props,\n        labelKey = _this$props3.labelKey,\n        multiple = _this$props3.multiple,\n        selected = _this$props3.selected;\n    validateSelectedPropChange(selected, prevProps.selected); // Sync selections in state with those in props.\n\n    if (selected && !isEqual(selected, prevState.selected)) {\n      this.setState({\n        selected: selected\n      });\n\n      if (!multiple) {\n        this.setState({\n          text: selected.length ? getOptionLabel(head(selected), labelKey) : ''\n        });\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    // Omit `onChange` so Flow doesn't complain.\n    var _this$props4 = this.props,\n        onChange = _this$props4.onChange,\n        otherProps = _objectWithoutPropertiesLoose(_this$props4, [\"onChange\"]);\n\n    var mergedPropsAndState = _extends({}, otherProps, this.state);\n\n    var filterBy = mergedPropsAndState.filterBy,\n        labelKey = mergedPropsAndState.labelKey,\n        options = mergedPropsAndState.options,\n        paginate = mergedPropsAndState.paginate,\n        shownResults = mergedPropsAndState.shownResults,\n        text = mergedPropsAndState.text;\n    this.isMenuShown = isShown(mergedPropsAndState);\n    this.items = []; // Reset items on re-render.\n\n    var results = [];\n\n    if (this.isMenuShown) {\n      var cb = typeof filterBy === 'function' ? filterBy : defaultFilterBy;\n      results = options.filter(function (option) {\n        return cb(option, mergedPropsAndState);\n      }); // This must come before results are truncated.\n\n      var shouldPaginate = paginate && results.length > shownResults; // Truncate results if necessary.\n\n      results = getTruncatedOptions(results, shownResults); // Add the custom option if necessary.\n\n      if (addCustomOption(results, mergedPropsAndState)) {\n        var _results$push;\n\n        results.push((_results$push = {\n          customOption: true\n        }, _results$push[getStringLabelKey(labelKey)] = text, _results$push));\n      } // Add the pagination item if necessary.\n\n\n      if (shouldPaginate) {\n        var _results$push2;\n\n        results.push((_results$push2 = {}, _results$push2[getStringLabelKey(labelKey)] = '', _results$push2.paginationOption = true, _results$push2));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(TypeaheadManager, _extends({}, mergedPropsAndState, {\n      hideMenu: this.hideMenu,\n      inputNode: this.inputNode,\n      inputRef: this.inputRef,\n      isMenuShown: this.isMenuShown,\n      onActiveItemChange: this._handleActiveItemChange,\n      onAdd: this._handleSelectionAdd,\n      onBlur: this._handleBlur,\n      onChange: this._handleInputChange,\n      onClear: this._handleClear,\n      onFocus: this._handleFocus,\n      onHide: this.hideMenu,\n      onInitialItemChange: this._handleInitialItemChange,\n      onKeyDown: this._handleKeyDown,\n      onMenuItemClick: this._handleMenuItemSelect,\n      onRemove: this._handleSelectionRemove,\n      results: results,\n      setItem: this.setItem,\n      toggleMenu: this.toggleMenu\n    }));\n  };\n\n  return Typeahead;\n}(React.Component);\n\n_defineProperty(Typeahead, \"propTypes\", propTypes);\n\n_defineProperty(Typeahead, \"defaultProps\", defaultProps);\n\nexport default Typeahead;","map":{"version":3,"sources":["C:/Users/jayce/Documents/movie_db/movie_db/node_modules/react-bootstrap-typeahead/es/core/Typeahead.js"],"names":["_objectWithoutPropertiesLoose","_assertThisInitialized","_inheritsLoose","_defineProperty","_extends","isEqual","PropTypes","React","TypeaheadManager","caseSensitiveType","checkPropType","defaultInputValueType","defaultSelectedType","deprecated","highlightOnlyResultType","ignoreDiacriticsType","isRequiredForA11y","labelKeyType","optionType","selectedType","addCustomOption","defaultFilterBy","getOptionLabel","getStringLabelKey","getUpdatedActiveIndex","getTruncatedOptions","head","isShown","isString","noop","uniqueId","validateSelectedPropChange","DEFAULT_LABELKEY","DOWN","ESC","RETURN","TAB","UP","propTypes","allowNew","oneOfType","bool","func","autoFocus","caseSensitive","defaultInputValue","string","defaultOpen","defaultSelected","arrayOf","filterBy","isRequired","highlightOnlyResult","id","number","ignoreDiacritics","labelKey","maxResults","minLength","multiple","onBlur","onChange","onFocus","onInputChange","onKeyDown","onMenuToggle","onPaginate","open","options","paginate","selected","selectHintOnEnter","defaultProps","getInitialState","props","slice","text","length","activeIndex","activeItem","initialItem","isFocused","showMenu","shownResults","clearTypeahead","state","hideMenu","_getInitialState","toggleMenu","Typeahead","_React$Component","_this","_len","arguments","args","Array","_key","call","apply","concat","inputNode","blur","setState","focus","item","position","items","e","persist","_handleChange","currentTarget","value","_this$props","shouldClearSelections","_getInitialState2","isMenuShown","keyCode","preventDefault","_handleActiveIndexChange","_handleMenuItemSelect","option","paginationOption","_handlePaginate","_handleSelectionAdd","_this$props2","selection","customOption","filter","_proto","prototype","componentDidMount","componentDidUpdate","prevProps","prevState","_this$props3","render","_this$props4","otherProps","mergedPropsAndState","results","cb","shouldPaginate","_results$push","push","_results$push2","createElement","inputRef","onActiveItemChange","_handleActiveItemChange","onAdd","_handleBlur","_handleInputChange","onClear","_handleClear","_handleFocus","onHide","onInitialItemChange","_handleInitialItemChange","_handleKeyDown","onMenuItemClick","onRemove","_handleSelectionRemove","setItem","Component"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,qDAA1C;AACA,OAAOC,sBAAP,MAAmC,8CAAnC;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,iBAAT,EAA4BC,aAA5B,EAA2CC,qBAA3C,EAAkEC,mBAAlE,EAAuFC,UAAvF,EAAmGC,uBAAnG,EAA4HC,oBAA5H,EAAkJC,iBAAlJ,EAAqKC,YAArK,EAAmLC,UAAnL,EAA+LC,YAA/L,QAAmN,cAAnN;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,cAA3C,EAA2DC,iBAA3D,EAA8EC,qBAA9E,EAAqGC,mBAArG,EAA0HC,IAA1H,EAAgIC,OAAhI,EAAyIC,QAAzI,EAAmJC,IAAnJ,EAAyJC,QAAzJ,EAAmKC,0BAAnK,QAAqM,UAArM;AACA,SAASC,gBAAT,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,MAAtC,EAA8CC,GAA9C,EAAmDC,EAAnD,QAA6D,cAA7D;AACA,IAAIC,SAAS,GAAG;AACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,QAAQ,EAAEjC,SAAS,CAACkC,SAAV,CAAoB,CAAClC,SAAS,CAACmC,IAAX,EAAiBnC,SAAS,CAACoC,IAA3B,CAApB,CATI;;AAWd;AACF;AACA;AACEC,EAAAA,SAAS,EAAErC,SAAS,CAACmC,IAdP;;AAgBd;AACF;AACA;AACEG,EAAAA,aAAa,EAAElC,aAAa,CAACJ,SAAS,CAACmC,IAAX,EAAiBhC,iBAAjB,CAnBd;;AAqBd;AACF;AACA;AACEoC,EAAAA,iBAAiB,EAAEnC,aAAa,CAACJ,SAAS,CAACwC,MAAX,EAAmBnC,qBAAnB,CAxBlB;;AA0Bd;AACF;AACA;AACEoC,EAAAA,WAAW,EAAEzC,SAAS,CAACmC,IA7BT;;AA+Bd;AACF;AACA;AACA;AACEO,EAAAA,eAAe,EAAEtC,aAAa,CAACJ,SAAS,CAAC2C,OAAV,CAAkB/B,UAAlB,CAAD,EAAgCN,mBAAhC,CAnChB;;AAqCd;AACF;AACA;AACA;AACEsC,EAAAA,QAAQ,EAAE5C,SAAS,CAACkC,SAAV,CAAoB,CAAClC,SAAS,CAAC2C,OAAV,CAAkB3C,SAAS,CAACwC,MAAV,CAAiBK,UAAnC,CAAD,EAAiD7C,SAAS,CAACoC,IAA3D,CAApB,CAzCI;;AA2Cd;AACF;AACA;AACA;AACEU,EAAAA,mBAAmB,EAAE1C,aAAa,CAACJ,SAAS,CAACmC,IAAX,EAAiB3B,uBAAjB,CA/CpB;;AAiDd;AACF;AACA;AACA;AACEuC,EAAAA,EAAE,EAAE3C,aAAa,CAACJ,SAAS,CAACkC,SAAV,CAAoB,CAAClC,SAAS,CAACgD,MAAX,EAAmBhD,SAAS,CAACwC,MAA7B,CAApB,CAAD,EAA4D9B,iBAA5D,CArDH;;AAuDd;AACF;AACA;AACEuC,EAAAA,gBAAgB,EAAE7C,aAAa,CAACJ,SAAS,CAACmC,IAAX,EAAiB1B,oBAAjB,CA1DjB;;AA4Dd;AACF;AACA;AACA;AACEyC,EAAAA,QAAQ,EAAE9C,aAAa,CAACJ,SAAS,CAACkC,SAAV,CAAoB,CAAClC,SAAS,CAACwC,MAAX,EAAmBxC,SAAS,CAACoC,IAA7B,CAApB,CAAD,EAA0DzB,YAA1D,CAhET;;AAkEd;AACF;AACA;AACA;AACA;AACEwC,EAAAA,UAAU,EAAEnD,SAAS,CAACgD,MAvER;;AAyEd;AACF;AACA;AACEI,EAAAA,SAAS,EAAEpD,SAAS,CAACgD,MA5EP;;AA8Ed;AACF;AACA;AACEK,EAAAA,QAAQ,EAAErD,SAAS,CAACmC,IAjFN;;AAmFd;AACF;AACA;AACEmB,EAAAA,MAAM,EAAEtD,SAAS,CAACoC,IAtFJ;;AAwFd;AACF;AACA;AACA;AACEmB,EAAAA,QAAQ,EAAEvD,SAAS,CAACoC,IA5FN;;AA8Fd;AACF;AACA;AACEoB,EAAAA,OAAO,EAAExD,SAAS,CAACoC,IAjGL;;AAmGd;AACF;AACA;AACA;AACEqB,EAAAA,aAAa,EAAEzD,SAAS,CAACoC,IAvGX;;AAyGd;AACF;AACA;AACEsB,EAAAA,SAAS,EAAE1D,SAAS,CAACoC,IA5GP;;AA8Gd;AACF;AACA;AACEuB,EAAAA,YAAY,EAAE3D,SAAS,CAACoC,IAjHV;;AAmHd;AACF;AACA;AACEwB,EAAAA,UAAU,EAAE5D,SAAS,CAACoC,IAtHR;;AAwHd;AACF;AACA;AACA;AACA;AACEyB,EAAAA,IAAI,EAAE7D,SAAS,CAACmC,IA7HF;;AA+Hd;AACF;AACA;AACA;AACE2B,EAAAA,OAAO,EAAE9D,SAAS,CAAC2C,OAAV,CAAkB/B,UAAlB,EAA8BiC,UAnIzB;;AAqId;AACF;AACA;AACA;AACEkB,EAAAA,QAAQ,EAAE/D,SAAS,CAACmC,IAzIN;;AA2Id;AACF;AACA;AACA;AACE6B,EAAAA,QAAQ,EAAE5D,aAAa,CAACJ,SAAS,CAAC2C,OAAV,CAAkB/B,UAAlB,CAAD,EAAgCC,YAAhC,CA/IT;;AAiJd;AACF;AACA;AACEoD,EAAAA,iBAAiB,EAAE1D,UAAU,CAACP,SAAS,CAACmC,IAAX,EAAiB,yEAAyE,iCAA1F;AApJf,CAAhB;AAsJA,IAAI+B,YAAY,GAAG;AACjBjC,EAAAA,QAAQ,EAAE,KADO;AAEjBI,EAAAA,SAAS,EAAE,KAFM;AAGjBC,EAAAA,aAAa,EAAE,KAHE;AAIjBC,EAAAA,iBAAiB,EAAE,EAJF;AAKjBE,EAAAA,WAAW,EAAE,KALI;AAMjBC,EAAAA,eAAe,EAAE,EANA;AAOjBE,EAAAA,QAAQ,EAAE,EAPO;AAQjBE,EAAAA,mBAAmB,EAAE,KARJ;AASjBG,EAAAA,gBAAgB,EAAE,IATD;AAUjBC,EAAAA,QAAQ,EAAExB,gBAVO;AAWjByB,EAAAA,UAAU,EAAE,GAXK;AAYjBC,EAAAA,SAAS,EAAE,CAZM;AAajBC,EAAAA,QAAQ,EAAE,KAbO;AAcjBC,EAAAA,MAAM,EAAE/B,IAdS;AAejBiC,EAAAA,OAAO,EAAEjC,IAfQ;AAgBjBkC,EAAAA,aAAa,EAAElC,IAhBE;AAiBjBmC,EAAAA,SAAS,EAAEnC,IAjBM;AAkBjBoC,EAAAA,YAAY,EAAEpC,IAlBG;AAmBjBqC,EAAAA,UAAU,EAAErC,IAnBK;AAoBjBwC,EAAAA,QAAQ,EAAE;AApBO,CAAnB;AAsBA,OAAO,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AACrC,MAAI7B,iBAAiB,GAAG6B,KAAK,CAAC7B,iBAA9B;AAAA,MACIE,WAAW,GAAG2B,KAAK,CAAC3B,WADxB;AAAA,MAEIC,eAAe,GAAG0B,KAAK,CAAC1B,eAF5B;AAAA,MAGIS,UAAU,GAAGiB,KAAK,CAACjB,UAHvB;AAAA,MAIIE,QAAQ,GAAGe,KAAK,CAACf,QAJrB;AAKA,MAAIW,QAAQ,GAAGI,KAAK,CAACJ,QAAN,GAAiBI,KAAK,CAACJ,QAAN,CAAeK,KAAf,EAAjB,GAA0C3B,eAAe,CAAC2B,KAAhB,EAAzD;AACA,MAAIC,IAAI,GAAG/B,iBAAX;;AAEA,MAAI,CAACc,QAAD,IAAaW,QAAQ,CAACO,MAA1B,EAAkC;AAChC;AACAD,IAAAA,IAAI,GAAGtD,cAAc,CAACI,IAAI,CAAC4C,QAAD,CAAL,EAAiBI,KAAK,CAAClB,QAAvB,CAArB;;AAEA,QAAIc,QAAQ,CAACO,MAAT,GAAkB,CAAtB,EAAyB;AACvB;AACAP,MAAAA,QAAQ,GAAGA,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAX;AACD;AACF;;AAED,SAAO;AACLG,IAAAA,WAAW,EAAE,CAAC,CADT;AAELC,IAAAA,UAAU,EAAE,IAFP;AAGLC,IAAAA,WAAW,EAAE,IAHR;AAILC,IAAAA,SAAS,EAAE,KAJN;AAKLX,IAAAA,QAAQ,EAAEA,QALL;AAMLY,IAAAA,QAAQ,EAAEnC,WANL;AAOLoC,IAAAA,YAAY,EAAE1B,UAPT;AAQLmB,IAAAA,IAAI,EAAEA;AARD,GAAP;AAUD;AACD,OAAO,SAASQ,cAAT,CAAwBC,KAAxB,EAA+BX,KAA/B,EAAsC;AAC3C,SAAOtE,QAAQ,CAAC,EAAD,EAAKqE,eAAe,CAACC,KAAD,CAApB,EAA6B;AAC1CO,IAAAA,SAAS,EAAEI,KAAK,CAACJ,SADyB;AAE1CX,IAAAA,QAAQ,EAAE,EAFgC;AAG1CM,IAAAA,IAAI,EAAE;AAHoC,GAA7B,CAAf;AAKD;AACD,OAAO,SAASU,QAAT,CAAkBD,KAAlB,EAAyBX,KAAzB,EAAgC;AACrC,MAAIa,gBAAgB,GAAGd,eAAe,CAACC,KAAD,CAAtC;AAAA,MACII,WAAW,GAAGS,gBAAgB,CAACT,WADnC;AAAA,MAEIC,UAAU,GAAGQ,gBAAgB,CAACR,UAFlC;AAAA,MAGIC,WAAW,GAAGO,gBAAgB,CAACP,WAHnC;AAAA,MAIIG,YAAY,GAAGI,gBAAgB,CAACJ,YAJpC;;AAMA,SAAO;AACLL,IAAAA,WAAW,EAAEA,WADR;AAELC,IAAAA,UAAU,EAAEA,UAFP;AAGLC,IAAAA,WAAW,EAAEA,WAHR;AAILE,IAAAA,QAAQ,EAAE,KAJL;AAKLC,IAAAA,YAAY,EAAEA;AALT,GAAP;AAOD;AACD,OAAO,SAASK,UAAT,CAAoBH,KAApB,EAA2BX,KAA3B,EAAkC;AACvC,SAAOW,KAAK,CAACH,QAAN,GAAiBI,QAAQ,CAACD,KAAD,EAAQX,KAAR,CAAzB,GAA0C;AAC/CQ,IAAAA,QAAQ,EAAE;AADqC,GAAjD;AAGD;;AAED,IAAIO,SAAS,GAAG,aAAa,UAAUC,gBAAV,EAA4B;AACvDxF,EAAAA,cAAc,CAACuF,SAAD,EAAYC,gBAAZ,CAAd;;AAEA,WAASD,SAAT,GAAqB;AACnB,QAAIE,KAAJ;;AAEA,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAAChB,MAArB,EAA6BiB,IAAI,GAAG,IAAIC,KAAJ,CAAUH,IAAV,CAApC,EAAqDI,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGJ,IAA3E,EAAiFI,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaH,SAAS,CAACG,IAAD,CAAtB;AACD;;AAEDL,IAAAA,KAAK,GAAGD,gBAAgB,CAACO,IAAjB,CAAsBC,KAAtB,CAA4BR,gBAA5B,EAA8C,CAAC,IAAD,EAAOS,MAAP,CAAcL,IAAd,CAA9C,KAAsE,IAA9E;;AAEA3F,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,OAAhC,EAAyClB,eAAe,CAACkB,KAAK,CAACjB,KAAP,CAAxD,CAAf;;AAEAvE,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,WAAhC,EAA6C,KAAK,CAAlD,CAAf;;AAEAxF,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,aAAhC,EAA+C,KAA/C,CAAf;;AAEAxF,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,OAAhC,EAAyC,EAAzC,CAAf;;AAEAxF,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,MAAhC,EAAwC,YAAY;AACjEA,MAAAA,KAAK,CAACS,SAAN,IAAmBT,KAAK,CAACS,SAAN,CAAgBC,IAAhB,EAAnB;;AAEAV,MAAAA,KAAK,CAACL,QAAN;AACD,KAJc,CAAf;;AAMAnF,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,OAAhC,EAAyC,YAAY;AAClEA,MAAAA,KAAK,CAACW,QAAN,CAAelB,cAAf;AACD,KAFc,CAAf;;AAIAjF,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,OAAhC,EAAyC,YAAY;AAClEA,MAAAA,KAAK,CAACS,SAAN,IAAmBT,KAAK,CAACS,SAAN,CAAgBG,KAAhB,EAAnB;AACD,KAFc,CAAf;;AAIApG,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,UAAhC,EAA4C,YAAY;AACrE,aAAOA,KAAK,CAACS,SAAb;AACD,KAFc,CAAf;;AAIAjG,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,UAAhC,EAA4C,UAAUS,SAAV,EAAqB;AAC9ET,MAAAA,KAAK,CAACS,SAAN,GAAkBA,SAAlB;AACD,KAFc,CAAf;;AAIAjG,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,SAAhC,EAA2C,UAAUa,IAAV,EAAgBC,QAAhB,EAA0B;AAClFd,MAAAA,KAAK,CAACe,KAAN,CAAYD,QAAZ,IAAwBD,IAAxB;AACD,KAFc,CAAf;;AAIArG,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,UAAhC,EAA4C,YAAY;AACrEA,MAAAA,KAAK,CAACW,QAAN,CAAehB,QAAf;AACD,KAFc,CAAf;;AAIAnF,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,YAAhC,EAA8C,YAAY;AACvEA,MAAAA,KAAK,CAACW,QAAN,CAAed,UAAf;AACD,KAFc,CAAf;;AAIArF,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,0BAAhC,EAA4D,UAAUb,WAAV,EAAuB;AAChGa,MAAAA,KAAK,CAACW,QAAN,CAAe,UAAUjB,KAAV,EAAiB;AAC9B,eAAO;AACLP,UAAAA,WAAW,EAAEA,WADR;AAELC,UAAAA,UAAU,EAAED,WAAW,KAAK,CAAC,CAAjB,GAAqB,IAArB,GAA4BO,KAAK,CAACN;AAFzC,SAAP;AAID,OALD;AAMD,KAPc,CAAf;;AASA5E,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,yBAAhC,EAA2D,UAAUZ,UAAV,EAAsB;AAC9F;AACA,UAAI,CAAC1E,OAAO,CAAC0E,UAAD,EAAaY,KAAK,CAACN,KAAN,CAAYN,UAAzB,CAAZ,EAAkD;AAChDY,QAAAA,KAAK,CAACW,QAAN,CAAe;AACbvB,UAAAA,UAAU,EAAEA;AADC,SAAf;AAGD;AACF,KAPc,CAAf;;AASA5E,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,aAAhC,EAA+C,UAAUgB,CAAV,EAAa;AACzEA,MAAAA,CAAC,CAACC,OAAF;;AAEAjB,MAAAA,KAAK,CAACW,QAAN,CAAe;AACbrB,QAAAA,SAAS,EAAE;AADE,OAAf,EAEG,YAAY;AACb,eAAOU,KAAK,CAACjB,KAAN,CAAYd,MAAZ,CAAmB+C,CAAnB,CAAP;AACD,OAJD;AAKD,KARc,CAAf;;AAUAxG,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,eAAhC,EAAiD,UAAUrB,QAAV,EAAoB;AAClFqB,MAAAA,KAAK,CAACjB,KAAN,CAAYb,QAAZ,IAAwB8B,KAAK,CAACjB,KAAN,CAAYb,QAAZ,CAAqBS,QAArB,CAAxB;AACD,KAFc,CAAf;;AAIAnE,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,cAAhC,EAAgD,YAAY;AACzEA,MAAAA,KAAK,CAACW,QAAN,CAAelB,cAAf,EAA+B,YAAY;AACzC,eAAOO,KAAK,CAACkB,aAAN,CAAoB,EAApB,CAAP;AACD,OAFD;AAGD,KAJc,CAAf;;AAMA1G,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,cAAhC,EAAgD,UAAUgB,CAAV,EAAa;AAC1EA,MAAAA,CAAC,CAACC,OAAF;;AAEAjB,MAAAA,KAAK,CAACW,QAAN,CAAe;AACbrB,QAAAA,SAAS,EAAE,IADE;AAEbC,QAAAA,QAAQ,EAAE;AAFG,OAAf,EAGG,YAAY;AACb,eAAOS,KAAK,CAACjB,KAAN,CAAYZ,OAAZ,CAAoB6C,CAApB,CAAP;AACD,OALD;AAMD,KATc,CAAf;;AAWAxG,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,0BAAhC,EAA4D,UAAUX,WAAV,EAAuB;AAChG;AACA,UAAI,CAAC3E,OAAO,CAAC2E,WAAD,EAAcW,KAAK,CAACN,KAAN,CAAYL,WAA1B,CAAZ,EAAoD;AAClDW,QAAAA,KAAK,CAACW,QAAN,CAAe;AACbtB,UAAAA,WAAW,EAAEA;AADA,SAAf;AAGD;AACF,KAPc,CAAf;;AASA7E,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,oBAAhC,EAAsD,UAAUgB,CAAV,EAAa;AAChFA,MAAAA,CAAC,CAACC,OAAF;AACA,UAAIhC,IAAI,GAAG+B,CAAC,CAACG,aAAF,CAAgBC,KAA3B;AACA,UAAIC,WAAW,GAAGrB,KAAK,CAACjB,KAAxB;AAAA,UACIf,QAAQ,GAAGqD,WAAW,CAACrD,QAD3B;AAAA,UAEII,aAAa,GAAGiD,WAAW,CAACjD,aAFhC,CAHgF,CAKjC;;AAE/C,UAAIkD,qBAAqB,GAAGtB,KAAK,CAACN,KAAN,CAAYf,QAAZ,CAAqBO,MAArB,IAA+B,CAAClB,QAA5D;;AAEAgC,MAAAA,KAAK,CAACW,QAAN,CAAe,UAAUjB,KAAV,EAAiBX,KAAjB,EAAwB;AACrC,YAAIwC,iBAAiB,GAAGzC,eAAe,CAACC,KAAD,CAAvC;AAAA,YACII,WAAW,GAAGoC,iBAAiB,CAACpC,WADpC;AAAA,YAEIC,UAAU,GAAGmC,iBAAiB,CAACnC,UAFnC;AAAA,YAGII,YAAY,GAAG+B,iBAAiB,CAAC/B,YAHrC;;AAKA,eAAO;AACLL,UAAAA,WAAW,EAAEA,WADR;AAELC,UAAAA,UAAU,EAAEA,UAFP;AAGLT,UAAAA,QAAQ,EAAE2C,qBAAqB,GAAG,EAAH,GAAQ5B,KAAK,CAACf,QAHxC;AAILY,UAAAA,QAAQ,EAAE,IAJL;AAKLC,UAAAA,YAAY,EAAEA,YALT;AAMLP,UAAAA,IAAI,EAAEA;AAND,SAAP;AAQD,OAdD,EAcG,YAAY;AACbb,QAAAA,aAAa,CAACa,IAAD,EAAO+B,CAAP,CAAb;AACAM,QAAAA,qBAAqB,IAAItB,KAAK,CAACkB,aAAN,CAAoB,EAApB,CAAzB;AACD,OAjBD;AAkBD,KA3Bc,CAAf;;AA6BA1G,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,gBAAhC,EAAkD,UAAUgB,CAAV,EAAa;AAC5E,UAAI5B,UAAU,GAAGY,KAAK,CAACN,KAAN,CAAYN,UAA7B,CAD4E,CACnC;;AAEzC,UAAI,CAACY,KAAK,CAACwB,WAAX,EAAwB;AACtB,YAAIR,CAAC,CAACS,OAAF,KAAc/E,EAAd,IAAoBsE,CAAC,CAACS,OAAF,KAAcnF,IAAtC,EAA4C;AAC1C0D,UAAAA,KAAK,CAACW,QAAN,CAAe;AACbpB,YAAAA,QAAQ,EAAE;AADG,WAAf;AAGD;;AAEDS,QAAAA,KAAK,CAACjB,KAAN,CAAYV,SAAZ,CAAsB2C,CAAtB;;AAEA;AACD;;AAED,cAAQA,CAAC,CAACS,OAAV;AACE,aAAK/E,EAAL;AACA,aAAKJ,IAAL;AACE;AACA0E,UAAAA,CAAC,CAACU,cAAF;;AAEA1B,UAAAA,KAAK,CAAC2B,wBAAN,CAA+B9F,qBAAqB,CAACmE,KAAK,CAACN,KAAN,CAAYP,WAAb,EAA0B6B,CAAC,CAACS,OAA5B,EAAqCzB,KAAK,CAACe,KAA3C,CAApD;;AAEA;;AAEF,aAAKvE,MAAL;AACE;AACAwE,UAAAA,CAAC,CAACU,cAAF;AACAtC,UAAAA,UAAU,IAAIY,KAAK,CAAC4B,qBAAN,CAA4BxC,UAA5B,EAAwC4B,CAAxC,CAAd;AACA;;AAEF,aAAKzE,GAAL;AACA,aAAKE,GAAL;AACE;AACA;AACAuD,UAAAA,KAAK,CAACL,QAAN;;AAEA;;AAEF;AACE;AAzBJ;;AA4BAK,MAAAA,KAAK,CAACjB,KAAN,CAAYV,SAAZ,CAAsB2C,CAAtB;AACD,KA5Cc,CAAf;;AA8CAxG,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,uBAAhC,EAAyD,UAAU6B,MAAV,EAAkBb,CAAlB,EAAqB;AAC3F,UAAIa,MAAM,CAACC,gBAAX,EAA6B;AAC3B9B,QAAAA,KAAK,CAAC+B,eAAN,CAAsBf,CAAtB;AACD,OAFD,MAEO;AACLhB,QAAAA,KAAK,CAACgC,mBAAN,CAA0BH,MAA1B;AACD;AACF,KANc,CAAf;;AAQArH,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,iBAAhC,EAAmD,UAAUgB,CAAV,EAAa;AAC7EA,MAAAA,CAAC,CAACC,OAAF;;AAEAjB,MAAAA,KAAK,CAACW,QAAN,CAAe,UAAUjB,KAAV,EAAiBX,KAAjB,EAAwB;AACrC,eAAO;AACLS,UAAAA,YAAY,EAAEE,KAAK,CAACF,YAAN,GAAqBT,KAAK,CAACjB;AADpC,SAAP;AAGD,OAJD,EAIG,YAAY;AACb,eAAOkC,KAAK,CAACjB,KAAN,CAAYR,UAAZ,CAAuByC,CAAvB,EAA0BhB,KAAK,CAACN,KAAN,CAAYF,YAAtC,CAAP;AACD,OAND;AAOD,KAVc,CAAf;;AAYAhF,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,qBAAhC,EAAuD,UAAU6B,MAAV,EAAkB;AACtF,UAAII,YAAY,GAAGjC,KAAK,CAACjB,KAAzB;AAAA,UACIf,QAAQ,GAAGiE,YAAY,CAACjE,QAD5B;AAAA,UAEIH,QAAQ,GAAGoE,YAAY,CAACpE,QAF5B;AAGA,UAAIc,QAAJ;AACA,UAAIuD,SAAS,GAAGL,MAAhB;AACA,UAAI5C,IAAJ,CANsF,CAM5E;AACV;;AAEA,UAAI,CAAChD,QAAQ,CAACiG,SAAD,CAAT,IAAwBA,SAAS,CAACC,YAAtC,EAAoD;AAClDD,QAAAA,SAAS,GAAGzH,QAAQ,CAAC,EAAD,EAAKyH,SAAL,EAAgB;AAClCxE,UAAAA,EAAE,EAAEvB,QAAQ,CAAC,SAAD;AADsB,SAAhB,CAApB;AAGD;;AAED,UAAI6B,QAAJ,EAAc;AACZ;AACA;AACAW,QAAAA,QAAQ,GAAGqB,KAAK,CAACN,KAAN,CAAYf,QAAZ,CAAqB6B,MAArB,CAA4B0B,SAA5B,CAAX;AACAjD,QAAAA,IAAI,GAAG,EAAP;AACD,OALD,MAKO;AACL;AACA;AACAN,QAAAA,QAAQ,GAAG,CAACuD,SAAD,CAAX;AACAjD,QAAAA,IAAI,GAAGtD,cAAc,CAACuG,SAAD,EAAYrE,QAAZ,CAArB;AACD;;AAEDmC,MAAAA,KAAK,CAACW,QAAN,CAAe,UAAUjB,KAAV,EAAiBX,KAAjB,EAAwB;AACrC,eAAOtE,QAAQ,CAAC,EAAD,EAAKkF,QAAQ,CAACD,KAAD,EAAQX,KAAR,CAAb,EAA6B;AAC1CM,UAAAA,WAAW,EAAE6C,SAD6B;AAE1CvD,UAAAA,QAAQ,EAAEA,QAFgC;AAG1CM,UAAAA,IAAI,EAAEA;AAHoC,SAA7B,CAAf;AAKD,OAND,EAMG,YAAY;AACb,eAAOe,KAAK,CAACkB,aAAN,CAAoBvC,QAApB,CAAP;AACD,OARD;AASD,KApCc,CAAf;;AAsCAnE,IAAAA,eAAe,CAACF,sBAAsB,CAAC0F,KAAD,CAAvB,EAAgC,wBAAhC,EAA0D,UAAUkC,SAAV,EAAqB;AAC5F,UAAIvD,QAAQ,GAAGqB,KAAK,CAACN,KAAN,CAAYf,QAAZ,CAAqByD,MAArB,CAA4B,UAAUP,MAAV,EAAkB;AAC3D,eAAO,CAACnH,OAAO,CAACmH,MAAD,EAASK,SAAT,CAAf;AACD,OAFc,CAAf,CAD4F,CAGxF;;;AAGJlC,MAAAA,KAAK,CAACY,KAAN;;AAEAZ,MAAAA,KAAK,CAACW,QAAN,CAAe,UAAUjB,KAAV,EAAiBX,KAAjB,EAAwB;AACrC,eAAOtE,QAAQ,CAAC,EAAD,EAAKkF,QAAQ,CAACD,KAAD,EAAQX,KAAR,CAAb,EAA6B;AAC1CJ,UAAAA,QAAQ,EAAEA;AADgC,SAA7B,CAAf;AAGD,OAJD,EAIG,YAAY;AACb,eAAOqB,KAAK,CAACkB,aAAN,CAAoBvC,QAApB,CAAP;AACD,OAND;AAOD,KAfc,CAAf;;AAiBA,WAAOqB,KAAP;AACD;;AAED,MAAIqC,MAAM,GAAGvC,SAAS,CAACwC,SAAvB;;AAEAD,EAAAA,MAAM,CAACE,iBAAP,GAA2B,SAASA,iBAAT,GAA6B;AACtD,SAAKxD,KAAL,CAAW/B,SAAX,IAAwB,KAAK4D,KAAL,EAAxB;AACD,GAFD;;AAIAyB,EAAAA,MAAM,CAACG,kBAAP,GAA4B,SAASA,kBAAT,CAA4BC,SAA5B,EAAuCC,SAAvC,EAAkD;AAC5E,QAAIC,YAAY,GAAG,KAAK5D,KAAxB;AAAA,QACIlB,QAAQ,GAAG8E,YAAY,CAAC9E,QAD5B;AAAA,QAEIG,QAAQ,GAAG2E,YAAY,CAAC3E,QAF5B;AAAA,QAGIW,QAAQ,GAAGgE,YAAY,CAAChE,QAH5B;AAIAvC,IAAAA,0BAA0B,CAACuC,QAAD,EAAW8D,SAAS,CAAC9D,QAArB,CAA1B,CAL4E,CAKlB;;AAE1D,QAAIA,QAAQ,IAAI,CAACjE,OAAO,CAACiE,QAAD,EAAW+D,SAAS,CAAC/D,QAArB,CAAxB,EAAwD;AACtD,WAAKgC,QAAL,CAAc;AACZhC,QAAAA,QAAQ,EAAEA;AADE,OAAd;;AAIA,UAAI,CAACX,QAAL,EAAe;AACb,aAAK2C,QAAL,CAAc;AACZ1B,UAAAA,IAAI,EAAEN,QAAQ,CAACO,MAAT,GAAkBvD,cAAc,CAACI,IAAI,CAAC4C,QAAD,CAAL,EAAiBd,QAAjB,CAAhC,GAA6D;AADvD,SAAd;AAGD;AACF;AACF,GAlBD;;AAoBAwE,EAAAA,MAAM,CAACO,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC;AACA,QAAIC,YAAY,GAAG,KAAK9D,KAAxB;AAAA,QACIb,QAAQ,GAAG2E,YAAY,CAAC3E,QAD5B;AAAA,QAEI4E,UAAU,GAAGzI,6BAA6B,CAACwI,YAAD,EAAe,CAAC,UAAD,CAAf,CAF9C;;AAIA,QAAIE,mBAAmB,GAAGtI,QAAQ,CAAC,EAAD,EAAKqI,UAAL,EAAiB,KAAKpD,KAAtB,CAAlC;;AAEA,QAAInC,QAAQ,GAAGwF,mBAAmB,CAACxF,QAAnC;AAAA,QACIM,QAAQ,GAAGkF,mBAAmB,CAAClF,QADnC;AAAA,QAEIY,OAAO,GAAGsE,mBAAmB,CAACtE,OAFlC;AAAA,QAGIC,QAAQ,GAAGqE,mBAAmB,CAACrE,QAHnC;AAAA,QAIIc,YAAY,GAAGuD,mBAAmB,CAACvD,YAJvC;AAAA,QAKIP,IAAI,GAAG8D,mBAAmB,CAAC9D,IAL/B;AAMA,SAAKuC,WAAL,GAAmBxF,OAAO,CAAC+G,mBAAD,CAA1B;AACA,SAAKhC,KAAL,GAAa,EAAb,CAfgC,CAef;;AAEjB,QAAIiC,OAAO,GAAG,EAAd;;AAEA,QAAI,KAAKxB,WAAT,EAAsB;AACpB,UAAIyB,EAAE,GAAG,OAAO1F,QAAP,KAAoB,UAApB,GAAiCA,QAAjC,GAA4C7B,eAArD;AACAsH,MAAAA,OAAO,GAAGvE,OAAO,CAAC2D,MAAR,CAAe,UAAUP,MAAV,EAAkB;AACzC,eAAOoB,EAAE,CAACpB,MAAD,EAASkB,mBAAT,CAAT;AACD,OAFS,CAAV,CAFoB,CAIhB;;AAEJ,UAAIG,cAAc,GAAGxE,QAAQ,IAAIsE,OAAO,CAAC9D,MAAR,GAAiBM,YAAlD,CANoB,CAM4C;;AAEhEwD,MAAAA,OAAO,GAAGlH,mBAAmB,CAACkH,OAAD,EAAUxD,YAAV,CAA7B,CARoB,CAQkC;;AAEtD,UAAI/D,eAAe,CAACuH,OAAD,EAAUD,mBAAV,CAAnB,EAAmD;AACjD,YAAII,aAAJ;;AAEAH,QAAAA,OAAO,CAACI,IAAR,EAAcD,aAAa,GAAG;AAC5BhB,UAAAA,YAAY,EAAE;AADc,SAAhB,EAEXgB,aAAa,CAACvH,iBAAiB,CAACiC,QAAD,CAAlB,CAAb,GAA6CoB,IAFlC,EAEwCkE,aAFtD;AAGD,OAhBmB,CAgBlB;;;AAGF,UAAID,cAAJ,EAAoB;AAClB,YAAIG,cAAJ;;AAEAL,QAAAA,OAAO,CAACI,IAAR,EAAcC,cAAc,GAAG,EAAjB,EAAqBA,cAAc,CAACzH,iBAAiB,CAACiC,QAAD,CAAlB,CAAd,GAA8C,EAAnE,EAAuEwF,cAAc,CAACvB,gBAAf,GAAkC,IAAzG,EAA+GuB,cAA7H;AACD;AACF;;AAED,WAAO,aAAazI,KAAK,CAAC0I,aAAN,CAAoBzI,gBAApB,EAAsCJ,QAAQ,CAAC,EAAD,EAAKsI,mBAAL,EAA0B;AAC1FpD,MAAAA,QAAQ,EAAE,KAAKA,QAD2E;AAE1Fc,MAAAA,SAAS,EAAE,KAAKA,SAF0E;AAG1F8C,MAAAA,QAAQ,EAAE,KAAKA,QAH2E;AAI1F/B,MAAAA,WAAW,EAAE,KAAKA,WAJwE;AAK1FgC,MAAAA,kBAAkB,EAAE,KAAKC,uBALiE;AAM1FC,MAAAA,KAAK,EAAE,KAAK1B,mBAN8E;AAO1F/D,MAAAA,MAAM,EAAE,KAAK0F,WAP6E;AAQ1FzF,MAAAA,QAAQ,EAAE,KAAK0F,kBAR2E;AAS1FC,MAAAA,OAAO,EAAE,KAAKC,YAT4E;AAU1F3F,MAAAA,OAAO,EAAE,KAAK4F,YAV4E;AAW1FC,MAAAA,MAAM,EAAE,KAAKrE,QAX6E;AAY1FsE,MAAAA,mBAAmB,EAAE,KAAKC,wBAZgE;AAa1F7F,MAAAA,SAAS,EAAE,KAAK8F,cAb0E;AAc1FC,MAAAA,eAAe,EAAE,KAAKxC,qBAdoE;AAe1FyC,MAAAA,QAAQ,EAAE,KAAKC,sBAf2E;AAgB1FtB,MAAAA,OAAO,EAAEA,OAhBiF;AAiB1FuB,MAAAA,OAAO,EAAE,KAAKA,OAjB4E;AAkB1F1E,MAAAA,UAAU,EAAE,KAAKA;AAlByE,KAA1B,CAA9C,CAApB;AAoBD,GAjED;;AAmEA,SAAOC,SAAP;AACD,CAvW4B,CAuW3BlF,KAAK,CAAC4J,SAvWqB,CAA7B;;AAyWAhK,eAAe,CAACsF,SAAD,EAAY,WAAZ,EAAyBnD,SAAzB,CAAf;;AAEAnC,eAAe,CAACsF,SAAD,EAAY,cAAZ,EAA4BjB,YAA5B,CAAf;;AAEA,eAAeiB,SAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport isEqual from 'fast-deep-equal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TypeaheadManager from './TypeaheadManager';\nimport { caseSensitiveType, checkPropType, defaultInputValueType, defaultSelectedType, deprecated, highlightOnlyResultType, ignoreDiacriticsType, isRequiredForA11y, labelKeyType, optionType, selectedType } from '../propTypes';\nimport { addCustomOption, defaultFilterBy, getOptionLabel, getStringLabelKey, getUpdatedActiveIndex, getTruncatedOptions, head, isShown, isString, noop, uniqueId, validateSelectedPropChange } from '../utils';\nimport { DEFAULT_LABELKEY, DOWN, ESC, RETURN, TAB, UP } from '../constants';\nvar propTypes = {\n  /**\n   * Allows the creation of new selections on the fly. Note that any new items\n   * will be added to the list of selections, but not the list of original\n   * options unless handled as such by `Typeahead`'s parent.\n   *\n   * If a function is specified, it will be used to determine whether a custom\n   * option should be included. The return value should be true or false.\n   */\n  allowNew: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n  /**\n   * Autofocus the input when the component initially mounts.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Whether or not filtering should be case-sensitive.\n   */\n  caseSensitive: checkPropType(PropTypes.bool, caseSensitiveType),\n\n  /**\n   * The initial value displayed in the text input.\n   */\n  defaultInputValue: checkPropType(PropTypes.string, defaultInputValueType),\n\n  /**\n   * Whether or not the menu is displayed upon initial render.\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * Specify any pre-selected options. Use only if you want the component to\n   * be uncontrolled.\n   */\n  defaultSelected: checkPropType(PropTypes.arrayOf(optionType), defaultSelectedType),\n\n  /**\n   * Either an array of fields in `option` to search, or a custom filtering\n   * callback.\n   */\n  filterBy: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string.isRequired), PropTypes.func]),\n\n  /**\n   * Highlights the menu item if there is only one result and allows selecting\n   * that item by hitting enter. Does not work with `allowNew`.\n   */\n  highlightOnlyResult: checkPropType(PropTypes.bool, highlightOnlyResultType),\n\n  /**\n   * An html id attribute, required for assistive technologies such as screen\n   * readers.\n   */\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n\n  /**\n   * Whether the filter should ignore accents and other diacritical marks.\n   */\n  ignoreDiacritics: checkPropType(PropTypes.bool, ignoreDiacriticsType),\n\n  /**\n   * Specify the option key to use for display or a function returning the\n   * display string. By default, the selector will use the `label` key.\n   */\n  labelKey: checkPropType(PropTypes.oneOfType([PropTypes.string, PropTypes.func]), labelKeyType),\n\n  /**\n   * Maximum number of results to display by default. Mostly done for\n   * performance reasons so as not to render too many DOM nodes in the case of\n   * large data sets.\n   */\n  maxResults: PropTypes.number,\n\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n\n  /**\n   * Whether or not multiple selections are allowed.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Invoked when the input is blurred. Receives an event.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Invoked whenever items are added or removed. Receives an array of the\n   * selected options.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Invoked when the input is focused. Receives an event.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Invoked when the input value changes. Receives the string value of the\n   * input.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Invoked when a key is pressed. Receives an event.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Invoked when menu visibility changes.\n   */\n  onMenuToggle: PropTypes.func,\n\n  /**\n   * Invoked when the pagination menu item is clicked. Receives an event.\n   */\n  onPaginate: PropTypes.func,\n\n  /**\n   * Whether or not the menu should be displayed. `undefined` allows the\n   * component to control visibility, while `true` and `false` show and hide\n   * the menu, respectively.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Full set of options, including pre-selected options. Must either be an\n   * array of objects (recommended) or strings.\n   */\n  options: PropTypes.arrayOf(optionType).isRequired,\n\n  /**\n   * Give user the ability to display additional results if the number of\n   * results exceeds `maxResults`.\n   */\n  paginate: PropTypes.bool,\n\n  /**\n   * The selected option(s) displayed in the input. Use this prop if you want\n   * to control the component via its parent.\n   */\n  selected: checkPropType(PropTypes.arrayOf(optionType), selectedType),\n\n  /**\n   * Allows selecting the hinted result by pressing enter.\n   */\n  selectHintOnEnter: deprecated(PropTypes.bool, 'Use the `shouldSelect` prop on the `Hint` component to define which ' + 'keystrokes can select the hint.')\n};\nvar defaultProps = {\n  allowNew: false,\n  autoFocus: false,\n  caseSensitive: false,\n  defaultInputValue: '',\n  defaultOpen: false,\n  defaultSelected: [],\n  filterBy: [],\n  highlightOnlyResult: false,\n  ignoreDiacritics: true,\n  labelKey: DEFAULT_LABELKEY,\n  maxResults: 100,\n  minLength: 0,\n  multiple: false,\n  onBlur: noop,\n  onFocus: noop,\n  onInputChange: noop,\n  onKeyDown: noop,\n  onMenuToggle: noop,\n  onPaginate: noop,\n  paginate: true\n};\nexport function getInitialState(props) {\n  var defaultInputValue = props.defaultInputValue,\n      defaultOpen = props.defaultOpen,\n      defaultSelected = props.defaultSelected,\n      maxResults = props.maxResults,\n      multiple = props.multiple;\n  var selected = props.selected ? props.selected.slice() : defaultSelected.slice();\n  var text = defaultInputValue;\n\n  if (!multiple && selected.length) {\n    // Set the text if an initial selection is passed in.\n    text = getOptionLabel(head(selected), props.labelKey);\n\n    if (selected.length > 1) {\n      // Limit to 1 selection in single-select mode.\n      selected = selected.slice(0, 1);\n    }\n  }\n\n  return {\n    activeIndex: -1,\n    activeItem: null,\n    initialItem: null,\n    isFocused: false,\n    selected: selected,\n    showMenu: defaultOpen,\n    shownResults: maxResults,\n    text: text\n  };\n}\nexport function clearTypeahead(state, props) {\n  return _extends({}, getInitialState(props), {\n    isFocused: state.isFocused,\n    selected: [],\n    text: ''\n  });\n}\nexport function hideMenu(state, props) {\n  var _getInitialState = getInitialState(props),\n      activeIndex = _getInitialState.activeIndex,\n      activeItem = _getInitialState.activeItem,\n      initialItem = _getInitialState.initialItem,\n      shownResults = _getInitialState.shownResults;\n\n  return {\n    activeIndex: activeIndex,\n    activeItem: activeItem,\n    initialItem: initialItem,\n    showMenu: false,\n    shownResults: shownResults\n  };\n}\nexport function toggleMenu(state, props) {\n  return state.showMenu ? hideMenu(state, props) : {\n    showMenu: true\n  };\n}\n\nvar Typeahead = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Typeahead, _React$Component);\n\n  function Typeahead() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", getInitialState(_this.props));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isMenuShown\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"blur\", function () {\n      _this.inputNode && _this.inputNode.blur();\n\n      _this.hideMenu();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      _this.setState(clearTypeahead);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      _this.inputNode && _this.inputNode.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInput\", function () {\n      return _this.inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", function (inputNode) {\n      _this.inputNode = inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setItem\", function (item, position) {\n      _this.items[position] = item;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideMenu\", function () {\n      _this.setState(hideMenu);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleMenu\", function () {\n      _this.setState(toggleMenu);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveIndexChange\", function (activeIndex) {\n      _this.setState(function (state) {\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeIndex === -1 ? null : state.activeItem\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveItemChange\", function (activeItem) {\n      // Don't update the active item if it hasn't changed.\n      if (!isEqual(activeItem, _this.state.activeItem)) {\n        _this.setState({\n          activeItem: activeItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleBlur\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: false\n      }, function () {\n        return _this.props.onBlur(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChange\", function (selected) {\n      _this.props.onChange && _this.props.onChange(selected);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleClear\", function () {\n      _this.setState(clearTypeahead, function () {\n        return _this._handleChange([]);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleFocus\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: true,\n        showMenu: true\n      }, function () {\n        return _this.props.onFocus(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInitialItemChange\", function (initialItem) {\n      // Don't update the initial item if it hasn't changed.\n      if (!isEqual(initialItem, _this.state.initialItem)) {\n        _this.setState({\n          initialItem: initialItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInputChange\", function (e) {\n      e.persist();\n      var text = e.currentTarget.value;\n      var _this$props = _this.props,\n          multiple = _this$props.multiple,\n          onInputChange = _this$props.onInputChange; // Clear selections when the input value changes in single-select mode.\n\n      var shouldClearSelections = _this.state.selected.length && !multiple;\n\n      _this.setState(function (state, props) {\n        var _getInitialState2 = getInitialState(props),\n            activeIndex = _getInitialState2.activeIndex,\n            activeItem = _getInitialState2.activeItem,\n            shownResults = _getInitialState2.shownResults;\n\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeItem,\n          selected: shouldClearSelections ? [] : state.selected,\n          showMenu: true,\n          shownResults: shownResults,\n          text: text\n        };\n      }, function () {\n        onInputChange(text, e);\n        shouldClearSelections && _this._handleChange([]);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var activeItem = _this.state.activeItem; // Skip most actions when the menu is hidden.\n\n      if (!_this.isMenuShown) {\n        if (e.keyCode === UP || e.keyCode === DOWN) {\n          _this.setState({\n            showMenu: true\n          });\n        }\n\n        _this.props.onKeyDown(e);\n\n        return;\n      }\n\n      switch (e.keyCode) {\n        case UP:\n        case DOWN:\n          // Prevent input cursor from going to the beginning when pressing up.\n          e.preventDefault();\n\n          _this._handleActiveIndexChange(getUpdatedActiveIndex(_this.state.activeIndex, e.keyCode, _this.items));\n\n          break;\n\n        case RETURN:\n          // Prevent form submission while menu is open.\n          e.preventDefault();\n          activeItem && _this._handleMenuItemSelect(activeItem, e);\n          break;\n\n        case ESC:\n        case TAB:\n          // ESC simply hides the menu. TAB will blur the input and move focus to\n          // the next item; hide the menu so it doesn't gain focus.\n          _this.hideMenu();\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this.props.onKeyDown(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleMenuItemSelect\", function (option, e) {\n      if (option.paginationOption) {\n        _this._handlePaginate(e);\n      } else {\n        _this._handleSelectionAdd(option);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePaginate\", function (e) {\n      e.persist();\n\n      _this.setState(function (state, props) {\n        return {\n          shownResults: state.shownResults + props.maxResults\n        };\n      }, function () {\n        return _this.props.onPaginate(e, _this.state.shownResults);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionAdd\", function (option) {\n      var _this$props2 = _this.props,\n          multiple = _this$props2.multiple,\n          labelKey = _this$props2.labelKey;\n      var selected;\n      var selection = option;\n      var text; // Add a unique id to the custom selection. Avoid doing this in `render` so\n      // the id doesn't increment every time.\n\n      if (!isString(selection) && selection.customOption) {\n        selection = _extends({}, selection, {\n          id: uniqueId('new-id-')\n        });\n      }\n\n      if (multiple) {\n        // If multiple selections are allowed, add the new selection to the\n        // existing selections.\n        selected = _this.state.selected.concat(selection);\n        text = '';\n      } else {\n        // If only a single selection is allowed, replace the existing selection\n        // with the new one.\n        selected = [selection];\n        text = getOptionLabel(selection, labelKey);\n      }\n\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          initialItem: selection,\n          selected: selected,\n          text: text\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionRemove\", function (selection) {\n      var selected = _this.state.selected.filter(function (option) {\n        return !isEqual(option, selection);\n      }); // Make sure the input stays focused after the item is removed.\n\n\n      _this.focus();\n\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          selected: selected\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    return _this;\n  }\n\n  var _proto = Typeahead.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props.autoFocus && this.focus();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var _this$props3 = this.props,\n        labelKey = _this$props3.labelKey,\n        multiple = _this$props3.multiple,\n        selected = _this$props3.selected;\n    validateSelectedPropChange(selected, prevProps.selected); // Sync selections in state with those in props.\n\n    if (selected && !isEqual(selected, prevState.selected)) {\n      this.setState({\n        selected: selected\n      });\n\n      if (!multiple) {\n        this.setState({\n          text: selected.length ? getOptionLabel(head(selected), labelKey) : ''\n        });\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    // Omit `onChange` so Flow doesn't complain.\n    var _this$props4 = this.props,\n        onChange = _this$props4.onChange,\n        otherProps = _objectWithoutPropertiesLoose(_this$props4, [\"onChange\"]);\n\n    var mergedPropsAndState = _extends({}, otherProps, this.state);\n\n    var filterBy = mergedPropsAndState.filterBy,\n        labelKey = mergedPropsAndState.labelKey,\n        options = mergedPropsAndState.options,\n        paginate = mergedPropsAndState.paginate,\n        shownResults = mergedPropsAndState.shownResults,\n        text = mergedPropsAndState.text;\n    this.isMenuShown = isShown(mergedPropsAndState);\n    this.items = []; // Reset items on re-render.\n\n    var results = [];\n\n    if (this.isMenuShown) {\n      var cb = typeof filterBy === 'function' ? filterBy : defaultFilterBy;\n      results = options.filter(function (option) {\n        return cb(option, mergedPropsAndState);\n      }); // This must come before results are truncated.\n\n      var shouldPaginate = paginate && results.length > shownResults; // Truncate results if necessary.\n\n      results = getTruncatedOptions(results, shownResults); // Add the custom option if necessary.\n\n      if (addCustomOption(results, mergedPropsAndState)) {\n        var _results$push;\n\n        results.push((_results$push = {\n          customOption: true\n        }, _results$push[getStringLabelKey(labelKey)] = text, _results$push));\n      } // Add the pagination item if necessary.\n\n\n      if (shouldPaginate) {\n        var _results$push2;\n\n        results.push((_results$push2 = {}, _results$push2[getStringLabelKey(labelKey)] = '', _results$push2.paginationOption = true, _results$push2));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(TypeaheadManager, _extends({}, mergedPropsAndState, {\n      hideMenu: this.hideMenu,\n      inputNode: this.inputNode,\n      inputRef: this.inputRef,\n      isMenuShown: this.isMenuShown,\n      onActiveItemChange: this._handleActiveItemChange,\n      onAdd: this._handleSelectionAdd,\n      onBlur: this._handleBlur,\n      onChange: this._handleInputChange,\n      onClear: this._handleClear,\n      onFocus: this._handleFocus,\n      onHide: this.hideMenu,\n      onInitialItemChange: this._handleInitialItemChange,\n      onKeyDown: this._handleKeyDown,\n      onMenuItemClick: this._handleMenuItemSelect,\n      onRemove: this._handleSelectionRemove,\n      results: results,\n      setItem: this.setItem,\n      toggleMenu: this.toggleMenu\n    }));\n  };\n\n  return Typeahead;\n}(React.Component);\n\n_defineProperty(Typeahead, \"propTypes\", propTypes);\n\n_defineProperty(Typeahead, \"defaultProps\", defaultProps);\n\nexport default Typeahead;"]},"metadata":{},"sourceType":"module"}