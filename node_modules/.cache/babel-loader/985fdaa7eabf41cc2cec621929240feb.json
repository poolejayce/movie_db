{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport invariant from 'invariant';\nimport React, { cloneElement, useEffect, useRef } from 'react';\nimport { useTypeaheadContext } from '../core/Context';\nimport { isSelectable } from '../utils';\nimport { RETURN, RIGHT, TAB } from '../constants'; // IE doesn't seem to get the composite computed value (eg: 'padding',\n// 'borderStyle', etc.), so generate these from the individual values.\n\nfunction interpolateStyle(styles, attr, subattr) {\n  if (subattr === void 0) {\n    subattr = '';\n  } // Title-case the sub-attribute.\n\n\n  if (subattr) {\n    /* eslint-disable-next-line no-param-reassign */\n    subattr = subattr.replace(subattr[0], subattr[0].toUpperCase());\n  }\n\n  return ['Top', 'Right', 'Bottom', 'Left'].map(function (dir) {\n    return styles[attr + dir + subattr];\n  }).join(' ');\n}\n\nfunction copyStyles(inputNode, hintNode) {\n  if (!inputNode || !hintNode) {\n    return;\n  }\n\n  var inputStyle = window.getComputedStyle(inputNode);\n  /* eslint-disable no-param-reassign */\n\n  hintNode.style.borderStyle = interpolateStyle(inputStyle, 'border', 'style');\n  hintNode.style.borderWidth = interpolateStyle(inputStyle, 'border', 'width');\n  hintNode.style.fontSize = inputStyle.fontSize;\n  hintNode.style.height = inputStyle.height;\n  hintNode.style.lineHeight = inputStyle.lineHeight;\n  hintNode.style.margin = interpolateStyle(inputStyle, 'margin');\n  hintNode.style.padding = interpolateStyle(inputStyle, 'padding');\n  /* eslint-enable no-param-reassign */\n}\n\nexport function defaultShouldSelect(e, state) {\n  var shouldSelectHint = false;\n  var currentTarget = e.currentTarget,\n      keyCode = e.keyCode;\n\n  if (keyCode === RIGHT) {\n    // For selectable input types (\"text\", \"search\"), only select the hint if\n    // it's at the end of the input value. For non-selectable types (\"email\",\n    // \"number\"), always select the hint.\n    shouldSelectHint = isSelectable(currentTarget) ? currentTarget.selectionStart === currentTarget.value.length : true;\n  }\n\n  if (keyCode === TAB) {\n    // Prevent input from blurring on TAB.\n    e.preventDefault();\n    shouldSelectHint = true;\n  }\n\n  if (keyCode === RETURN) {\n    shouldSelectHint = !!state.selectHintOnEnter;\n  }\n\n  return typeof state.shouldSelect === 'function' ? state.shouldSelect(shouldSelectHint, e) : shouldSelectHint;\n}\nexport var useHint = function useHint(_ref) {\n  var children = _ref.children,\n      shouldSelect = _ref.shouldSelect;\n  !(React.Children.count(children) === 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '`useHint` expects one child.') : invariant(false) : void 0;\n\n  var _useTypeaheadContext = useTypeaheadContext(),\n      hintText = _useTypeaheadContext.hintText,\n      initialItem = _useTypeaheadContext.initialItem,\n      inputNode = _useTypeaheadContext.inputNode,\n      onAdd = _useTypeaheadContext.onAdd,\n      selectHintOnEnter = _useTypeaheadContext.selectHintOnEnter;\n\n  var hintRef = useRef(null);\n\n  var onKeyDown = function onKeyDown(e) {\n    if (hintText && initialItem && defaultShouldSelect(e, {\n      selectHintOnEnter: selectHintOnEnter,\n      shouldSelect: shouldSelect\n    })) {\n      onAdd(initialItem);\n    }\n\n    children.props.onKeyDown && children.props.onKeyDown(e);\n  };\n\n  useEffect(function () {\n    copyStyles(inputNode, hintRef.current);\n  });\n  return {\n    child: /*#__PURE__*/cloneElement(children, _extends({}, children.props, {\n      onKeyDown: onKeyDown\n    })),\n    hintRef: hintRef,\n    hintText: hintText\n  };\n};\n\nvar Hint = function Hint(_ref2) {\n  var className = _ref2.className,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"className\"]);\n\n  var _useHint = useHint(props),\n      child = _useHint.child,\n      hintRef = _useHint.hintRef,\n      hintText = _useHint.hintText;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: {\n      display: 'flex',\n      flex: 1,\n      height: '100%',\n      position: 'relative'\n    }\n  }, child, /*#__PURE__*/React.createElement(\"input\", {\n    \"aria-hidden\": true,\n    className: \"rbt-input-hint\",\n    ref: hintRef,\n    readOnly: true,\n    style: {\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      boxShadow: 'none',\n      color: 'rgba(0, 0, 0, 0.35)',\n      left: 0,\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      width: '100%'\n    },\n    tabIndex: -1,\n    value: hintText\n  }));\n};\n\nexport default Hint;","map":{"version":3,"sources":["C:/Users/jayce/Documents/movie_db/movie_db/node_modules/react-bootstrap-typeahead/es/components/Hint.js"],"names":["_objectWithoutPropertiesLoose","_extends","invariant","React","cloneElement","useEffect","useRef","useTypeaheadContext","isSelectable","RETURN","RIGHT","TAB","interpolateStyle","styles","attr","subattr","replace","toUpperCase","map","dir","join","copyStyles","inputNode","hintNode","inputStyle","window","getComputedStyle","style","borderStyle","borderWidth","fontSize","height","lineHeight","margin","padding","defaultShouldSelect","e","state","shouldSelectHint","currentTarget","keyCode","selectionStart","value","length","preventDefault","selectHintOnEnter","shouldSelect","useHint","_ref","children","Children","count","process","env","NODE_ENV","_useTypeaheadContext","hintText","initialItem","onAdd","hintRef","onKeyDown","props","current","child","Hint","_ref2","className","_useHint","createElement","display","flex","position","ref","readOnly","backgroundColor","borderColor","boxShadow","color","left","pointerEvents","top","width","tabIndex"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport invariant from 'invariant';\nimport React, { cloneElement, useEffect, useRef } from 'react';\nimport { useTypeaheadContext } from '../core/Context';\nimport { isSelectable } from '../utils';\nimport { RETURN, RIGHT, TAB } from '../constants';\n\n// IE doesn't seem to get the composite computed value (eg: 'padding',\n// 'borderStyle', etc.), so generate these from the individual values.\nfunction interpolateStyle(styles, attr, subattr) {\n  if (subattr === void 0) {\n    subattr = '';\n  }\n\n  // Title-case the sub-attribute.\n  if (subattr) {\n    /* eslint-disable-next-line no-param-reassign */\n    subattr = subattr.replace(subattr[0], subattr[0].toUpperCase());\n  }\n\n  return ['Top', 'Right', 'Bottom', 'Left'].map(function (dir) {\n    return styles[attr + dir + subattr];\n  }).join(' ');\n}\n\nfunction copyStyles(inputNode, hintNode) {\n  if (!inputNode || !hintNode) {\n    return;\n  }\n\n  var inputStyle = window.getComputedStyle(inputNode);\n  /* eslint-disable no-param-reassign */\n\n  hintNode.style.borderStyle = interpolateStyle(inputStyle, 'border', 'style');\n  hintNode.style.borderWidth = interpolateStyle(inputStyle, 'border', 'width');\n  hintNode.style.fontSize = inputStyle.fontSize;\n  hintNode.style.height = inputStyle.height;\n  hintNode.style.lineHeight = inputStyle.lineHeight;\n  hintNode.style.margin = interpolateStyle(inputStyle, 'margin');\n  hintNode.style.padding = interpolateStyle(inputStyle, 'padding');\n  /* eslint-enable no-param-reassign */\n}\n\nexport function defaultShouldSelect(e, state) {\n  var shouldSelectHint = false;\n  var currentTarget = e.currentTarget,\n      keyCode = e.keyCode;\n\n  if (keyCode === RIGHT) {\n    // For selectable input types (\"text\", \"search\"), only select the hint if\n    // it's at the end of the input value. For non-selectable types (\"email\",\n    // \"number\"), always select the hint.\n    shouldSelectHint = isSelectable(currentTarget) ? currentTarget.selectionStart === currentTarget.value.length : true;\n  }\n\n  if (keyCode === TAB) {\n    // Prevent input from blurring on TAB.\n    e.preventDefault();\n    shouldSelectHint = true;\n  }\n\n  if (keyCode === RETURN) {\n    shouldSelectHint = !!state.selectHintOnEnter;\n  }\n\n  return typeof state.shouldSelect === 'function' ? state.shouldSelect(shouldSelectHint, e) : shouldSelectHint;\n}\nexport var useHint = function useHint(_ref) {\n  var children = _ref.children,\n      shouldSelect = _ref.shouldSelect;\n  !(React.Children.count(children) === 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '`useHint` expects one child.') : invariant(false) : void 0;\n\n  var _useTypeaheadContext = useTypeaheadContext(),\n      hintText = _useTypeaheadContext.hintText,\n      initialItem = _useTypeaheadContext.initialItem,\n      inputNode = _useTypeaheadContext.inputNode,\n      onAdd = _useTypeaheadContext.onAdd,\n      selectHintOnEnter = _useTypeaheadContext.selectHintOnEnter;\n\n  var hintRef = useRef(null);\n\n  var onKeyDown = function onKeyDown(e) {\n    if (hintText && initialItem && defaultShouldSelect(e, {\n      selectHintOnEnter: selectHintOnEnter,\n      shouldSelect: shouldSelect\n    })) {\n      onAdd(initialItem);\n    }\n\n    children.props.onKeyDown && children.props.onKeyDown(e);\n  };\n\n  useEffect(function () {\n    copyStyles(inputNode, hintRef.current);\n  });\n  return {\n    child: /*#__PURE__*/cloneElement(children, _extends({}, children.props, {\n      onKeyDown: onKeyDown\n    })),\n    hintRef: hintRef,\n    hintText: hintText\n  };\n};\n\nvar Hint = function Hint(_ref2) {\n  var className = _ref2.className,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"className\"]);\n\n  var _useHint = useHint(props),\n      child = _useHint.child,\n      hintRef = _useHint.hintRef,\n      hintText = _useHint.hintText;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: {\n      display: 'flex',\n      flex: 1,\n      height: '100%',\n      position: 'relative'\n    }\n  }, child, /*#__PURE__*/React.createElement(\"input\", {\n    \"aria-hidden\": true,\n    className: \"rbt-input-hint\",\n    ref: hintRef,\n    readOnly: true,\n    style: {\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      boxShadow: 'none',\n      color: 'rgba(0, 0, 0, 0.35)',\n      left: 0,\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      width: '100%'\n    },\n    tabIndex: -1,\n    value: hintText\n  }));\n};\n\nexport default Hint;"]},"metadata":{},"sourceType":"module"}