{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jayce\\\\Documents\\\\movie_db\\\\movie_db\\\\src\\\\components\\\\Typeahead\\\\Typeahead.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport TypeaheadResults from './TypeaheadResults/TypeaheadResults';\nimport './Typeahead.css';\n\nconst Typeahead = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [options, setOptions] = useState([]);\n  let cache = {};\n\n  const handleInputChange = query => {\n    setQuery(query);\n  };\n\n  const handlePagination = (e, shownResults) => {\n    const currentState = {\n      loading: loading,\n      query: query,\n      options,\n      options\n    };\n    const cachedQuery = cache;\n\n    if (cachedQuery.options.length > shownResults || cachedQuery.options.length === cachedQuery.total_count) {\n      return;\n    }\n\n    setLoading(true);\n    const page = cachedQuery.page + 1;\n  }; // const makeAndHandleRequest(query, page = 1) {\n  //     return fetch(`${SEARCH_URI}?q=${query}`)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"async-typeahead-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(AsyncTypeahead, {\n      isLoading: loading,\n      delay: 250,\n      id: \"async-typeahead\",\n      labelKey: \"search\",\n      maxResults: 20,\n      minLength: 2,\n      onInputChange: handleInputChange,\n      onPaginate: () => {},\n      onSearch: () => {},\n      paginate: true,\n      placeholder: \"Search movies, TV shows, and celebrities\" //TODO: set up results views into own component\n      ,\n      renderMenuItemChildren: option => /*#__PURE__*/_jsxDEV(TypeaheadResults, {\n        props: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Typeahead, \"fDLBNlxpnh1vIKh8srSnjBy2Zx0=\");\n\n_c = Typeahead;\nexport default Typeahead;\n\nvar _c;\n\n$RefreshReg$(_c, \"Typeahead\");","map":{"version":3,"sources":["C:/Users/jayce/Documents/movie_db/movie_db/src/components/Typeahead/Typeahead.js"],"names":["React","useState","AsyncTypeahead","TypeaheadResults","Typeahead","loading","setLoading","query","setQuery","options","setOptions","cache","handleInputChange","handlePagination","e","shownResults","currentState","cachedQuery","length","total_count","page","option"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AAEA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEA,MAAIU,KAAK,GAAG,EAAZ;;AAEA,QAAMC,iBAAiB,GAAGL,KAAK,IAAI;AAC/BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMM,gBAAgB,GAAG,CAACC,CAAD,EAAIC,YAAJ,KAAqB;AAC1C,UAAMC,YAAY,GAAG;AACjBX,MAAAA,OAAO,EAAEA,OADQ;AAEjBE,MAAAA,KAAK,EAAEA,KAFU;AAGjBE,MAAAA,OAHiB;AAGRA,MAAAA;AAHQ,KAArB;AAKA,UAAMQ,WAAW,GAAGN,KAApB;;AAEA,QACIM,WAAW,CAACR,OAAZ,CAAoBS,MAApB,GAA6BH,YAA7B,IACAE,WAAW,CAACR,OAAZ,CAAoBS,MAApB,KAA+BD,WAAW,CAACE,WAF/C,EAGE;AACE;AACH;;AAEDb,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMc,IAAI,GAAGH,WAAW,CAACG,IAAZ,GAAmB,CAAhC;AAGH,GApBD,CAXoB,CAiCpB;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,2BACI,QAAC,cAAD;AACI,MAAA,SAAS,EAAEf,OADf;AAEI,MAAA,KAAK,EAAE,GAFX;AAGI,MAAA,EAAE,EAAC,iBAHP;AAII,MAAA,QAAQ,EAAC,QAJb;AAKI,MAAA,UAAU,EAAE,EALhB;AAMI,MAAA,SAAS,EAAE,CANf;AAOI,MAAA,aAAa,EAAEO,iBAPnB;AAQI,MAAA,UAAU,EAAE,MAAM,CAAE,CARxB;AASI,MAAA,QAAQ,EAAE,MAAM,CAAE,CATtB;AAUI,MAAA,QAAQ,MAVZ;AAWI,MAAA,WAAW,EAAC,0CAXhB,CAYI;AAZJ;AAaI,MAAA,sBAAsB,EAAES,MAAM,iBAC1B,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA;AAdR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA1DD;;GAAMjB,S;;KAAAA,S;AA4DN,eAAeA,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {AsyncTypeahead} from 'react-bootstrap-typeahead';\r\n\r\nimport TypeaheadResults from './TypeaheadResults/TypeaheadResults';\r\nimport './Typeahead.css';\r\n\r\nconst Typeahead = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n\r\n    let cache = {};\r\n\r\n    const handleInputChange = query => {\r\n        setQuery(query);\r\n    }\r\n\r\n    const handlePagination = (e, shownResults) => {\r\n        const currentState = {\r\n            loading: loading,\r\n            query: query,\r\n            options, options,\r\n        };\r\n        const cachedQuery = cache;\r\n\r\n        if (\r\n            cachedQuery.options.length > shownResults ||\r\n            cachedQuery.options.length === cachedQuery.total_count\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const page = cachedQuery.page + 1;\r\n\r\n\r\n    }\r\n\r\n    // const makeAndHandleRequest(query, page = 1) {\r\n    //     return fetch(`${SEARCH_URI}?q=${query}`)\r\n    // }\r\n\r\n    return(\r\n        <div className='async-typeahead-wrapper'>\r\n            <AsyncTypeahead \r\n                isLoading={loading} \r\n                delay={250}\r\n                id='async-typeahead'\r\n                labelKey='search'\r\n                maxResults={20}\r\n                minLength={2}\r\n                onInputChange={handleInputChange}\r\n                onPaginate={() => {}}\r\n                onSearch={() => {}}\r\n                paginate\r\n                placeholder=\"Search movies, TV shows, and celebrities\"\r\n                //TODO: set up results views into own component\r\n                renderMenuItemChildren={option => (\r\n                    <TypeaheadResults props={option}></TypeaheadResults>\r\n                )}>\r\n            </AsyncTypeahead>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Typeahead;"]},"metadata":{},"sourceType":"module"}